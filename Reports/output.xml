<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.6.8 on win32)" generated="20240613 16:30:50.687" rpa="false" schemaversion="4">
<suite id="s1" name="Test-Robot-Image-Gallery" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery">
<suite id="s1-s1" name="NG-GALLERY-TestCases" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery\NG-GALLERY-TestCases">
<suite id="s1-s1-s1" name="TestsSuites" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery\NG-GALLERY-TestCases\TestsSuites">
<suite id="s1-s1-s1-s1" name="Test-API-TC-010" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery\NG-GALLERY-TestCases\TestsSuites\Test-API-TC-010.robot">
<test id="s1-s1-s1-s1-t1" name="Test-API-TC-010" line="11">
<kw name="Open API" library="commonKeywords" type="SETUP">
<doc>Open the web browser passed as argument (default browser is chrome) and open the API page</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup ${browser}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup chrome" library="commonKeywords">
<doc>Configure the google chrome webdriver</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${options_chrome}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240613 16:30:51.401" level="INFO">${options_chrome} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000024A6FA694A8&gt;</msg>
<status status="PASS" starttime="20240613 16:30:51.400" endtime="20240613 16:30:51.401"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:30:51.401" endtime="20240613 16:30:51.401"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:30:51.401" endtime="20240613 16:30:51.402"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>enable-automation</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:30:51.402" endtime="20240613 16:30:51.402"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>disable-gpu</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:30:51.402" endtime="20240613 16:30:51.402"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>force-device-scale-factor\=0.65</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:30:51.403" endtime="20240613 16:30:51.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EXECDIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240613 16:30:51.403" level="INFO">C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery</msg>
<status status="PASS" starttime="20240613 16:30:51.403" endtime="20240613 16:30:51.403"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>driver_name=Chrome</arg>
<arg>executable_path=${EXECDIR}/Runners/chromedriver.exe</arg>
<arg>chrome_options=${options_chrome}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20240613 16:30:51.404" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20240613 16:30:51.404" endtime="20240613 16:30:53.739"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20240613 16:30:53.739" endtime="20240613 16:30:53.765"/>
</kw>
<status status="PASS" starttime="20240613 16:30:51.400" endtime="20240613 16:30:53.765"/>
</kw>
<status status="PASS" starttime="20240613 16:30:51.394" endtime="20240613 16:30:53.765"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${ng_api_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20240613 16:30:53.766" level="INFO">Opening url 'http://localhost:5000/'</msg>
<status status="PASS" starttime="20240613 16:30:53.765" endtime="20240613 16:30:54.852"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=ng-api-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:30:55.048" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ng-api-page.png"&gt;&lt;img src="ng-api-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:30:54.853" endtime="20240613 16:30:55.049"/>
</kw>
<status status="PASS" starttime="20240613 16:30:51.393" endtime="20240613 16:30:55.049"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>API_testing</arg>
<arg>${api_base_endpoint}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240613 16:30:55.050" level="INFO">Creating Session using : alias=API_testing, url=http://localhost:5000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240613 16:30:55.050" endtime="20240613 16:30:55.050"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${get_response}</var>
<arg>get on session</arg>
<arg>API_testing</arg>
<arg>/</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="GET On Session" library="RequestsLibrary">
<arg>API_testing</arg>
<arg>/</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20240613 16:30:55.071" level="INFO">GET Request : url=http://localhost:5000/ 
 path_url=/ 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240613 16:30:55.071" level="INFO">GET Response : url=http://localhost:5000/ 
 status=200, reason=OK 
 headers={'Server': 'Werkzeug/2.2.2 Python/3.9.19', 'Date': 'Thu, 13 Jun 2024 15:30:55 GMT', 'Content-Type': 'text/html; charset=utf-8', 'Content-Length': '3805', 'Access-Control-Allow-Origin': '*', 'Connection': 'close'} 
 body=&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;API&lt;/title&gt;
    
&lt;link media="screen" rel="stylesheet" type="text/css" href="/swaggerui/droid-sans.css" /&gt;
&lt;link media="screen" rel="stylesheet" type="text/css" href="/swaggerui/swagger-ui.css" /&gt;
&lt;style&gt;
html
{
  box-sizing: border-box;
  overflow: -moz-scrollbars-vertical;
  overflow-y: scroll;
}
*,
*:before,
*:after
{
  box-sizing: inherit;
}

body {
  margin:0;
  background: #fafafa;
}
&lt;/style&gt;

    &lt;link rel="icon" type="image/png" href="/swaggerui/favicon-32x32.png" sizes="32x32" /&gt;
    &lt;link rel="icon" type="image/png" href="/swaggerui/favicon-16x16.png" sizes="16x16" /&gt;

&lt;/head&gt;

&lt;body&gt;
    &lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0"&gt;
      &lt;defs&gt;
        &lt;symbol viewBox="0 0 20 20" id="unlocked"&gt;
              &lt;path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"&gt;&lt;/path&gt;
        &lt;/symbol&gt;

        &lt;symbol viewBox="0 0 20 20" id="locked"&gt;
          &lt;path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/&gt;
        &lt;/symbol&gt;

        &lt;symbol viewBox="0 0 20 20" id="close"&gt;
          &lt;path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/&gt;
        &lt;/symbol&gt;

        &lt;symbol viewBox="0 0 20 20" id="large-arrow"&gt;
          &lt;path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/&gt;
        &lt;/symbol&gt;

        &lt;symbol viewBox="0 0 20 20" id="large-arrow-down"&gt;
          &lt;path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/&gt;
        &lt;/symbol&gt;


        &lt;symbol viewBox="0 0 24 24" id="jump-to"&gt;
          &lt;path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/&gt;
        &lt;/symbol&gt;

        &lt;symbol viewBox="0 0 24 24" id="expand"&gt;
          &lt;path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/&gt;
        &lt;/symbol&gt;

      &lt;/defs&gt;
    &lt;/svg&gt;

    &lt;div id="swagger-ui"&gt;&lt;/div&gt;

    
&lt;script src="/swaggerui/swagger-ui-bundle.js"&gt;&lt;/script&gt;
&lt;script src="/swaggerui/swagger-ui-standalone-preset.js"&gt;&lt;/script&gt;
    &lt;script type="text/javascript"&gt;
        window.onload = function() {
            const ui = window.ui = new SwaggerUIBundle({
                url: "/swagger.json",
                
                validatorUrl: "" || null,
                dom_id: "#swagger-ui",
                presets: [
                    SwaggerUIBundle.presets.apis,
                    SwaggerUIStandalonePreset.slice(1) // No Topbar
                ],
                plugins: [
                    SwaggerUIBundle.plugins.DownloadUrl
                ],
                
                displayOperationId: false,
                displayRequestDuration: false,
                docExpansion: "none"
            })

            
        }
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt; 
 </msg>
<status status="PASS" starttime="20240613 16:30:55.052" endtime="20240613 16:30:55.074"/>
</kw>
<msg timestamp="20240613 16:30:55.075" level="INFO">${get_response} = True</msg>
<status status="PASS" starttime="20240613 16:30:55.051" endtime="20240613 16:30:55.075"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${get_response}'</arg>
<arg>'True'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240613 16:30:55.076" endtime="20240613 16:30:55.076"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${get_response}</var>
<arg>get on session</arg>
<arg>API_testing</arg>
<arg>list-layers</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="GET On Session" library="RequestsLibrary">
<arg>API_testing</arg>
<arg>list-layers</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20240613 16:30:55.092" level="INFO">GET Request : url=http://localhost:5000/list-layers 
 path_url=/list-layers 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240613 16:30:55.092" level="INFO">GET Response : url=http://localhost:5000/list-layers 
 status=200, reason=OK 
 headers={'Server': 'Werkzeug/2.2.2 Python/3.9.19', 'Date': 'Thu, 13 Jun 2024 15:30:55 GMT', 'Content-Type': 'application/json', 'Content-Length': '46517', 'Access-Control-Allow-Origin': '*', 'Connection': 'close'} 
 body={"configuration": {"MSGIODC Imagery": [{"name": "msg_iodc:ir039", "title": "High Rate SEVIRI IR3.9 \u03bcm Image - MSG - Indian Ocean", "alias": "layer alias", "description": "Rectified (level 1.5) Meteosat SEVIRI image data. The data is transmitted as High Rate transmissions in 12 spectral channels. Level 1.5 image data corresponds to the geolocated and radiometrically pre-processed image data, ready for further processing, e.g. the extraction of meteorological products. Any spacecraft specific effects have been removed, and in particular, linearisation and equalisation of the image radiometry has been performed for all SEVIRI channels. The on-board blackbody data has been processed. Both radiometric and geometric quality control information is included. To enhance the perception for areas which are on the night side of the Earth a different mapping with increased contrast is applied for IR3.9 product. The greyscale mapping is based on the EBBT which allows to map the ranges 200 K to 300 K for the night and 250 K to 330 K for the day.&amp;#13;&amp;#10;&amp;#13;&amp;#10;From 1 June 2022, Meteosat-9 at 45.5\u00b0 E is the prime satellite for the IODC service, replacing Meteosat-8 (located at 41.5\u00b0 E while in operation).", "features": "backgrounds:ne_boundary_lines_land", "icon": "https://img.icons8.com/ios/50/FFFFFF/globe--v1.png", "projection": "AUTO:42003,9001,45.5,0", "bbox": [-10000000, -10000000, 10000000, 10000000]}, {"name": "msg_iodc:ir108", "title": "High Rate SEVIRI IR10.8 \u03bcm Image - MSG - Indian Ocean", "alias": "layer alias", "description": "Rectified (level 1.5) Meteosat SEVIRI image data. The data is transmitted as High Rate transmissions in 12 spectral channels. Level 1.5 image data corresponds to the geolocated and radiometrically pre-processed image data, ready for further processing, e.g. the extraction of meteorological products. Any spacecraft specific effects have been removed, and in particular, linearisation and equalisation of the image radiometry has been performed for all SEVIRI channels. The on-board blackbody data has been processed. Both radiometric and geometric quality control information is included.&amp;#13;&amp;#10;&amp;#13;&amp;#10;&amp;#13;&amp;#10;From 1 June 2022, Meteosat-9 at 45.5\u00b0 E is the prime satellite for the IODC service, replacing Meteosat-8 (located at 41.5\u00b0 E while in operation).", "features": "backgrounds:ne_boundary_lines_land", "icon": "https://img.icons8.com/ios/50/FFFFFF/globe--v1.png", "projection": "AUTO:42003,9001,45.5,0", "bbox": [-10000000, -10000000, 10000000, 10000000]}], "MSGIODC RGB Composites": [{"name": "msg_iodc:rgb_airmass", "title": "Airmass RGB - MSG - Indian Ocean", "alias": "layer alias", "description": "The Airmass product is an RGB (Red, Green, Blue) composite based upon data from infrared and water vapour channels from the SEVIRI instrument. It is designed and tuned to monitor the distribution of different air masses and evolution of cyclones, in particular rapid cyclogenesis, jet streaks and PV (potential vorticity) anomalies. Due to the incorporation of the water vapour and ozone channels, its usage at highest satellite viewing angles is limited. The Airmass RGB is composed from data from a combination of the SEVIRI WV6.2, WV7.3, IR9.7 and IR10.8 channels.&amp;#13;&amp;#10;&amp;#13;&amp;#10;From 1 June 2022, Meteosat-9 at 45.5\u00b0 E is the prime satellite for the IODC service, replacing Meteosat-8 (located at 41.5\u00b0 E while in operation).", "features": "backgrounds:ne_boundary_lines_land", "icon": "https://img.icons8.com/ios/50/FFFFFF/globe--v1.png", "projection": "AUTO:42003,9001,45.5,0", "bbox": [-10000000, -10000000, 10000000, 10000000]}, {"name": "msg_iodc:rgb_ash", "title": "Volcanic Ash RGB - MSG - Indian Ocean", "alias": "layer alias", "description": "The Ash product is an RGB (Red, Green, Blue) composite based upon infrared channel data from the Meteosat Second Generation satellite. It is designed to detect ash and sulphur dioxide (SO2) from volcanic eruptions which can be used for the provision of warnings to aviation authorities. The Ash RGB is composed from data from a combination of the SEVIRI IR8.7, IR10.8 and IR12.0 channels.&amp;#13;&amp;#10;&amp;#13;&amp;#10;From 1 June 2022, Meteosat-9 at 45.5\u00b0 E is the prime satellite for the IODC service, replacing Meteosat-8 (located at 41.5\u00b0 E while in operation).", "features": "backgrounds:ne_boundary_lines_land", "icon": "https://img.icons8.com/ios/50/FFFFFF/globe--v1.png", "projection": "AUTO:42003,9001,45.5,0", "bbox": [-10000000, -10000000, 10000000, 10000000]}, {"name": "msg_iodc:rgb_convection", "title": "Convection RGB - MSG - Indian Ocean", "alias": "layer alias", "description": "The Convection RGB combines the brightness temperature difference (BTD) between the WV6.2 and WV7.3 channels (on red), the BTD between the IR3.9 and IR10.8 channels (on green) and the reflectance difference between the NIR1.6 and the VIS0.6 channels (on blue). Severe convective storms appear bright yellow in this color scheme because of the near zero BTD WV6.2-WV7.3 of overshooting Cb clouds (high red). The strong updrafts in these clouds produce small ice particles at cloud tops due to homogeneous freezing of cloud drops, resulting with large BTD IR3.9-IR10.8 (high green). Finally, large negative values of NIR1.6-VIS0.6 because of the large absorption at NIR1.6 by ice particles keeps the blue very low. Please note that small ice crystals of Cirrus clouds should not be confused with vigorous convection. Inferred small ice crystals that are not associated with anvils of Cb clouds must form by elevated strong updrafts, such as in high altitude orographic wave clouds.&amp;#13;&amp;#10;&amp;#13;&amp;#10;From 1 June 2022, Meteosat-9 at 45.5\u00b0 E is the prime satellite for the IODC service, replacing Meteosat-8 (located at 41.5\u00b0 E while in operation).", "features": "backgrounds:ne_boundary_lines_land", "icon": "https://img.icons8.com/ios/50/FFFFFF/globe--v1.png", "projection": "AUTO:42003,9001,45.5,0", "bbox": [-10000000, -10000000, 10000000, 10000000]}, {"name": "msg_iodc:rgb_dust", "title": "Dust RGB - MSG - Indian Ocean", "alias": "layer alias", "description": "The Dust product is an RGB (Red, Green, Blue) composite based upon infrared channel data from the Meteosat Second Generation satellite. It is designed to monitor the evolution of dust storms during both day and night. But it is also useful for discrimination of cloud types (e.g. thin Cirrus detection) and detection of low level moisture. The Dust RGB is composed from data from a combination of the SEVIRI IR8.7, IR10.8 and IR12.0 channels.&amp;#13;&amp;#10;&amp;#13;&amp;#10;From 1 June 2022, Meteosat-9 at 45.5\u00b0 E is the prime satellite for the IODC service, replacing Meteosat-8 (located at 41.5\u00b0 E while in operation).", "features": "backgrounds:ne_boundary_lines_land", "icon": "https://img.icons8.com/ios/50/FFFFFF/globe--v1.png", "projection": "AUTO:42003,9001,45.5,0", "bbox": [-10000000, -10000000, 10000000, 10000000]}, {"name": "msg_iodc:rgb_eview", "title": "European HRV RGB - MSG - Indian Ocean", "alias": "layer alias", "description": "The E-View product is an RGB (Red, Green, Blue) composite based upon data from the SEVIRI instrument. It is dedicated to detailed cloud monitoring of the European region. It is based on data from the SEVIRI High Resolution Visible channel combined with data from the IR10.8 channel that provides the temperature information (blue component).&amp;#13;&amp;#10;&amp;#13;&amp;#10;From 1 June 2022, Meteosat-9 at 45.5\u00b0 E is the prime satellite for the IODC service, replacing Meteosat-8 (located at 41.5\u00b0 E while in operation).", "features": "backgrounds:ne_boundary_lines_land", "icon": "https://img.icons8.com/ios/50/FFFFFF/globe--v1.png", "projection": "AUTO:42003,9001,45.5,0", "bbox": [-10000000, -10000000, 10000000, 10000000]}, {"name": "msg_iodc:rgb_fog", "title": "Fog / Low Clouds RGB - MSG - Indian Ocean", "alias": "layer alias", "description": "The Fog / Low Clouds product is an RGB (Red, Green, Blue) composite based upon infrared channel data from the Meteosat Second Generation satellite. It is designed and tuned to monitor the evolution of night-time fog / low stratus. Other (secondary) applications are the detection of fires, low-level moisture boundaries and cloud classification in general. It should be noted that as the product is tuned for night-time conditions, its use during day-time is very limited. The Fog / Low Clouds RGB is composed from data from a combination of the SEVIRI IR3.9, IR10.8 and IR12.0 channels&amp;#13;&amp;#10;&amp;#13;&amp;#10;From 1 June 2022, Meteosat-9 at 45.5\u00b0 E is the prime satellite for the IODC service, replacing Meteosat-8 (located at 41.5\u00b0 E while in operation).", "features": "backgrounds:ne_boundary_lines_land", "icon": "https://img.icons8.com/ios/50/FFFFFF/globe--v1.png", "projection": "AUTO:42003,9001,45.5,0", "bbox": [-10000000, -10000000, 10000000, 10000000]}, {"name": "msg_iodc:rgb_microphysics", "title": "Day Microphysics RGB - MSG - Indian Ocean", "alias": "layer alias", "description": "The Day Microphysics RGB (Red, Green, Blue) was inherited from Rosenfeld and Lensky (1998): the VIS0.8 reflectance in red approximates the cloud optical depth and amount of cloud water and ice; the IR3.9 solar reflectance in green is a qualitative measure for cloud particle size and phase, and the IR10.8 brightness temperature modulates the blue. This color scheme is useful for cloud analysis, convection, fog, snow, and fires. In this colour scheme water clouds that do not precipitate appear white because cloud drops are small, whereas large drops that are typical to precipitating clouds appear pink, because of the low reflectance at IR3.9 manifested as low green. Supercooled water clouds appear more yellow, because the lower temperature that modulate the blue component. Cold and thick clouds with tops composed of large ice particles, e.g., Cb tops, appear red. Optically thick clouds with small ice particles near their tops appear orange. &amp;#13;&amp;#... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<status status="PASS" starttime="20240613 16:30:55.078" endtime="20240613 16:30:55.093"/>
</kw>
<msg timestamp="20240613 16:30:55.093" level="INFO">${get_response} = True</msg>
<status status="PASS" starttime="20240613 16:30:55.077" endtime="20240613 16:30:55.093"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${get_response}'</arg>
<arg>'True'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240613 16:30:55.094" endtime="20240613 16:30:55.094"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${get_response}</var>
<arg>get on session</arg>
<arg>API_testing</arg>
<arg>list-regions</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="GET On Session" library="RequestsLibrary">
<arg>API_testing</arg>
<arg>list-regions</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20240613 16:30:55.108" level="INFO">GET Request : url=http://localhost:5000/list-regions 
 path_url=/list-regions 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240613 16:30:55.109" level="INFO">GET Response : url=http://localhost:5000/list-regions 
 status=200, reason=OK 
 headers={'Server': 'Werkzeug/2.2.2 Python/3.9.19', 'Date': 'Thu, 13 Jun 2024 15:30:55 GMT', 'Content-Type': 'application/json', 'Content-Length': '726', 'Access-Control-Allow-Origin': '*', 'Connection': 'close'} 
 body={"regions": {"earth": ["-77.0", "-77.0", "77.0", "77.0"], "northamerica": ["-166", "7", "-52", "77"], "southamerica": ["-87", "-58", "-33", "13"], "europe": ["-11", "34", "32", "64"], "africa": ["-18", "-36", "53", "38"]}, "_links": {"add region=earth as image parameter": "http://172.17.0.2:5000/add-parameter?region=earth", "add region=northamerica as image parameter": "http://172.17.0.2:5000/add-parameter?region=northamerica", "add region=southamerica as image parameter": "http://172.17.0.2:5000/add-parameter?region=southamerica", "add region=europe as image parameter": "http://172.17.0.2:5000/add-parameter?region=europe", "add region=africa as image parameter": "http://172.17.0.2:5000/add-parameter?region=africa"}} 
 </msg>
<status status="PASS" starttime="20240613 16:30:55.096" endtime="20240613 16:30:55.109"/>
</kw>
<msg timestamp="20240613 16:30:55.109" level="INFO">${get_response} = True</msg>
<status status="PASS" starttime="20240613 16:30:55.095" endtime="20240613 16:30:55.109"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${get_response}'</arg>
<arg>'True'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240613 16:30:55.110" endtime="20240613 16:30:55.111"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${get_response}</var>
<arg>get on session</arg>
<arg>API_testing</arg>
<arg>list-supported-formats</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="GET On Session" library="RequestsLibrary">
<arg>API_testing</arg>
<arg>list-supported-formats</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20240613 16:30:55.126" level="INFO">GET Request : url=http://localhost:5000/list-supported-formats 
 path_url=/list-supported-formats 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240613 16:30:55.126" level="INFO">GET Response : url=http://localhost:5000/list-supported-formats 
 status=200, reason=OK 
 headers={'Server': 'Werkzeug/2.2.2 Python/3.9.19', 'Date': 'Thu, 13 Jun 2024 15:30:55 GMT', 'Content-Type': 'application/json', 'Content-Length': '316', 'Access-Control-Allow-Origin': '*', 'Connection': 'close'} 
 body={"formats": ["tiff", "png", "jpeg"], "_links": {"add format=tiff as image parameter": "http://172.17.0.2:5000/add-parameter?format=tiff", "add format=png as image parameter": "http://172.17.0.2:5000/add-parameter?format=png", "add format=jpeg as image parameter": "http://172.17.0.2:5000/add-parameter?format=jpeg"}} 
 </msg>
<status status="PASS" starttime="20240613 16:30:55.112" endtime="20240613 16:30:55.126"/>
</kw>
<msg timestamp="20240613 16:30:55.126" level="INFO">${get_response} = True</msg>
<status status="PASS" starttime="20240613 16:30:55.111" endtime="20240613 16:30:55.126"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${get_response}'</arg>
<arg>'True'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240613 16:30:55.128" endtime="20240613 16:30:55.128"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${get_response}</var>
<arg>get on session</arg>
<arg>API_testing</arg>
<arg>add-parameter</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="GET On Session" library="RequestsLibrary">
<arg>API_testing</arg>
<arg>add-parameter</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20240613 16:30:55.142" level="INFO">GET Request : url=http://localhost:5000/add-parameter 
 path_url=/add-parameter 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240613 16:30:55.143" level="INFO">GET Response : url=http://localhost:5000/add-parameter 
 status=200, reason=OK 
 headers={'Server': 'Werkzeug/2.2.2 Python/3.9.19', 'Date': 'Thu, 13 Jun 2024 15:30:55 GMT', 'Content-Type': 'application/json', 'Content-Length': '1060', 'Access-Control-Allow-Origin': '*', 'Connection': 'close'} 
 body={"_links": {"list-layers": "http://172.17.0.2/list-layers", "list-supported-formats": "http://172.17.0.2/list-supported-formats", "list-regions": "http://172.17.0.2/list-regions", "set image width to 300": "http://172.17.0.2/add-parameter?width=300", "set image width to 600": "http://172.17.0.2/add-parameter?width=600", "set image width to 1000": "http://172.17.0.2/add-parameter?width=1000", "set image width to 1500": "http://172.17.0.2/add-parameter?width=1500", "set image width to 2200": "http://172.17.0.2/add-parameter?width=2200", "set image width to 3500": "http://172.17.0.2/add-parameter?width=3500", "set image height to 300": "http://172.17.0.2/add-parameter?height=300", "set image height to 600": "http://172.17.0.2/add-parameter?height=600", "set image height to 1000": "http://172.17.0.2/add-parameter?height=1000", "set image height to 1500": "http://172.17.0.2/add-parameter?height=1500", "set image height to 2200": "http://172.17.0.2/add-parameter?height=2200", "set image height to 3500": "http://172.17.0.2/add-parameter?height=3500"}} 
 </msg>
<status status="PASS" starttime="20240613 16:30:55.129" endtime="20240613 16:30:55.143"/>
</kw>
<msg timestamp="20240613 16:30:55.143" level="INFO">${get_response} = True</msg>
<status status="PASS" starttime="20240613 16:30:55.129" endtime="20240613 16:30:55.143"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${get_response}'</arg>
<arg>'True'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240613 16:30:55.144" endtime="20240613 16:30:55.145"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>layer=msg_iodc:rgb_natural</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240613 16:30:55.147" level="INFO">${params} = {'layer': 'msg_iodc:rgb_natural'}</msg>
<status status="PASS" starttime="20240613 16:30:55.146" endtime="20240613 16:30:55.147"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${get_response}</var>
<arg>get on session</arg>
<arg>API_testing</arg>
<arg>list-available-times</arg>
<arg>params=${params}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="GET On Session" library="RequestsLibrary">
<arg>API_testing</arg>
<arg>list-available-times</arg>
<arg>params=${params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20240613 16:30:55.883" level="INFO">GET Request : url=http://localhost:5000/list-available-times?layer=msg_iodc%3Argb_natural 
 path_url=/list-available-times?layer=msg_iodc%3Argb_natural 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240613 16:30:55.883" level="INFO">GET Response : url=http://localhost:5000/list-available-times?layer=msg_iodc%3Argb_natural 
 status=200, reason=OK 
 headers={'Server': 'Werkzeug/2.2.2 Python/3.9.19', 'Date': 'Thu, 13 Jun 2024 15:30:55 GMT', 'Content-Type': 'application/json', 'Content-Length': '52332', 'Access-Control-Allow-Origin': '*', 'Connection': 'close'} 
 body={"times": ["2024-06-13T14:45:00.000Z", "2024-06-13T14:30:00.000Z", "2024-06-13T14:15:00.000Z", "2024-06-13T14:00:00.000Z", "2024-06-13T13:45:00.000Z", "2024-06-13T13:30:00.000Z", "2024-06-13T13:15:00.000Z", "2024-06-13T13:00:00.000Z", "2024-06-13T12:45:00.000Z", "2024-06-13T12:30:00.000Z", "2024-06-13T12:15:00.000Z", "2024-06-13T12:00:00.000Z", "2024-06-13T11:45:00.000Z", "2024-06-13T11:30:00.000Z", "2024-06-13T11:15:00.000Z", "2024-06-13T11:00:00.000Z", "2024-06-13T10:45:00.000Z", "2024-06-13T10:30:00.000Z", "2024-06-13T10:15:00.000Z", "2024-06-13T10:00:00.000Z", "2024-06-13T09:45:00.000Z", "2024-06-13T09:30:00.000Z", "2024-06-13T09:15:00.000Z", "2024-06-13T09:00:00.000Z", "2024-06-13T08:45:00.000Z", "2024-06-13T08:30:00.000Z", "2024-06-13T08:15:00.000Z", "2024-06-13T08:00:00.000Z", "2024-06-13T07:45:00.000Z", "2024-06-13T07:30:00.000Z", "2024-06-13T07:15:00.000Z", "2024-06-13T07:00:00.000Z", "2024-06-13T06:45:00.000Z", "2024-06-13T06:30:00.000Z", "2024-06-13T06:15:00.000Z", "2024-06-13T06:00:00.000Z", "2024-06-13T05:45:00.000Z", "2024-06-13T05:30:00.000Z", "2024-06-13T05:15:00.000Z", "2024-06-13T05:00:00.000Z", "2024-06-13T04:45:00.000Z", "2024-06-13T04:30:00.000Z", "2024-06-13T04:15:00.000Z", "2024-06-13T04:00:00.000Z", "2024-06-13T03:45:00.000Z", "2024-06-13T03:30:00.000Z", "2024-06-13T03:15:00.000Z", "2024-06-13T03:00:00.000Z", "2024-06-13T02:45:00.000Z", "2024-06-13T02:30:00.000Z", "2024-06-13T02:15:00.000Z", "2024-06-13T02:00:00.000Z", "2024-06-13T01:45:00.000Z", "2024-06-13T01:30:00.000Z", "2024-06-13T01:15:00.000Z", "2024-06-13T01:00:00.000Z", "2024-06-13T00:45:00.000Z", "2024-06-13T00:30:00.000Z", "2024-06-13T00:15:00.000Z", "2024-06-13T00:00:00.000Z", "2024-06-12T23:45:00.000Z", "2024-06-12T23:30:00.000Z", "2024-06-12T23:15:00.000Z", "2024-06-12T23:00:00.000Z", "2024-06-12T22:45:00.000Z", "2024-06-12T22:30:00.000Z", "2024-06-12T22:15:00.000Z", "2024-06-12T22:00:00.000Z", "2024-06-12T21:45:00.000Z", "2024-06-12T21:30:00.000Z", "2024-06-12T21:15:00.000Z", "2024-06-12T21:00:00.000Z", "2024-06-12T20:45:00.000Z", "2024-06-12T20:30:00.000Z", "2024-06-12T20:15:00.000Z", "2024-06-12T20:00:00.000Z", "2024-06-12T19:45:00.000Z", "2024-06-12T19:30:00.000Z", "2024-06-12T19:15:00.000Z", "2024-06-12T19:00:00.000Z", "2024-06-12T18:45:00.000Z", "2024-06-12T18:30:00.000Z", "2024-06-12T18:15:00.000Z", "2024-06-12T18:00:00.000Z", "2024-06-12T17:45:00.000Z", "2024-06-12T17:30:00.000Z", "2024-06-12T17:15:00.000Z", "2024-06-12T17:00:00.000Z", "2024-06-12T16:45:00.000Z", "2024-06-12T16:30:00.000Z", "2024-06-12T16:15:00.000Z", "2024-06-12T16:00:00.000Z", "2024-06-12T15:45:00.000Z", "2024-06-12T15:30:00.000Z", "2024-06-12T15:15:00.000Z", "2024-06-12T15:00:00.000Z", "2024-06-12T14:45:00.000Z", "2024-06-12T14:30:00.000Z", "2024-06-12T14:15:00.000Z", "2024-06-12T14:00:00.000Z", "2024-06-12T13:45:00.000Z", "2024-06-12T13:30:00.000Z", "2024-06-12T13:15:00.000Z", "2024-06-12T13:00:00.000Z", "2024-06-12T12:45:00.000Z", "2024-06-12T12:30:00.000Z", "2024-06-12T12:15:00.000Z", "2024-06-12T12:00:00.000Z", "2024-06-12T11:45:00.000Z", "2024-06-12T11:30:00.000Z", "2024-06-12T11:15:00.000Z", "2024-06-12T11:00:00.000Z", "2024-06-12T10:45:00.000Z", "2024-06-12T10:30:00.000Z", "2024-06-12T10:15:00.000Z", "2024-06-12T10:00:00.000Z", "2024-06-12T09:45:00.000Z", "2024-06-12T09:30:00.000Z", "2024-06-12T09:15:00.000Z", "2024-06-12T09:00:00.000Z", "2024-06-12T08:45:00.000Z", "2024-06-12T08:30:00.000Z", "2024-06-12T08:15:00.000Z", "2024-06-12T08:00:00.000Z", "2024-06-12T07:45:00.000Z", "2024-06-12T07:30:00.000Z", "2024-06-12T07:15:00.000Z", "2024-06-12T07:00:00.000Z", "2024-06-12T06:45:00.000Z", "2024-06-12T06:30:00.000Z", "2024-06-12T06:15:00.000Z", "2024-06-12T06:00:00.000Z", "2024-06-12T05:45:00.000Z", "2024-06-12T05:30:00.000Z", "2024-06-12T05:15:00.000Z", "2024-06-12T05:00:00.000Z", "2024-06-12T04:45:00.000Z", "2024-06-12T04:30:00.000Z", "2024-06-12T04:15:00.000Z", "2024-06-12T04:00:00.000Z", "2024-06-12T03:45:00.000Z", "2024-06-12T03:30:00.000Z", "2024-06-12T03:15:00.000Z", "2024-06-12T03:00:00.000Z", "2024-06-12T02:45:00.000Z", "2024-06-12T02:30:00.000Z", "2024-06-12T02:15:00.000Z", "2024-06-12T02:00:00.000Z", "2024-06-12T01:45:00.000Z", "2024-06-12T01:30:00.000Z", "2024-06-12T01:15:00.000Z", "2024-06-12T01:00:00.000Z", "2024-06-12T00:45:00.000Z", "2024-06-12T00:30:00.000Z", "2024-06-12T00:15:00.000Z", "2024-06-12T00:00:00.000Z", "2024-06-11T23:45:00.000Z", "2024-06-11T23:30:00.000Z", "2024-06-11T23:15:00.000Z", "2024-06-11T23:00:00.000Z", "2024-06-11T22:45:00.000Z", "2024-06-11T22:30:00.000Z", "2024-06-11T22:15:00.000Z", "2024-06-11T22:00:00.000Z", "2024-06-11T21:45:00.000Z", "2024-06-11T21:30:00.000Z", "2024-06-11T21:15:00.000Z", "2024-06-11T21:00:00.000Z", "2024-06-11T20:45:00.000Z", "2024-06-11T20:30:00.000Z", "2024-06-11T20:15:00.000Z", "2024-06-11T20:00:00.000Z", "2024-06-11T19:45:00.000Z", "2024-06-11T19:30:00.000Z", "2024-06-11T19:15:00.000Z", "2024-06-11T19:00:00.000Z", "2024-06-11T18:45:00.000Z", "2024-06-11T18:30:00.000Z", "2024-06-11T18:15:00.000Z", "2024-06-11T18:00:00.000Z", "2024-06-11T17:45:00.000Z", "2024-06-11T17:30:00.000Z", "2024-06-11T17:15:00.000Z", "2024-06-11T17:00:00.000Z", "2024-06-11T16:45:00.000Z", "2024-06-11T16:30:00.000Z", "2024-06-11T16:15:00.000Z", "2024-06-11T16:00:00.000Z", "2024-06-11T15:45:00.000Z", "2024-06-11T15:30:00.000Z", "2024-06-11T15:15:00.000Z", "2024-06-11T15:00:00.000Z", "2024-06-11T14:45:00.000Z", "2024-06-11T14:30:00.000Z", "2024-06-11T14:15:00.000Z", "2024-06-11T14:00:00.000Z", "2024-06-11T13:45:00.000Z", "2024-06-11T13:30:00.000Z", "2024-06-11T13:15:00.000Z", "2024-06-11T13:00:00.000Z", "2024-06-11T12:45:00.000Z", "2024-06-11T12:30:00.000Z", "2024-06-11T12:15:00.000Z", "2024-06-11T12:00:00.000Z", "2024-06-11T11:45:00.000Z", "2024-06-11T11:30:00.000Z", "2024-06-11T11:15:00.000Z", "2024-06-11T11:00:00.000Z", "2024-06-11T10:45:00.000Z", "2024-06-11T10:30:00.000Z", "2024-06-11T10:15:00.000Z", "2024-06-11T10:00:00.000Z", "2024-06-11T09:45:00.000Z", "2024-06-11T09:30:00.000Z", "2024-06-11T09:15:00.000Z", "2024-06-11T09:00:00.000Z", "2024-06-11T08:45:00.000Z", "2024-06-11T08:30:00.000Z", "2024-06-11T08:15:00.000Z", "2024-06-11T08:00:00.000Z", "2024-06-11T07:45:00.000Z", "2024-06-11T07:30:00.000Z", "2024-06-11T07:15:00.000Z", "2024-06-11T07:00:00.000Z", "2024-06-11T06:45:00.000Z", "2024-06-11T06:30:00.000Z", "2024-06-11T06:15:00.000Z", "2024-06-11T06:00:00.000Z", "2024-06-11T05:45:00.000Z", "2024-06-11T05:30:00.000Z", "2024-06-11T05:15:00.000Z", "2024-06-11T05:00:00.000Z", "2024-06-11T04:45:00.000Z", "2024-06-11T04:30:00.000Z", "2024-06-11T04:15:00.000Z", "2024-06-11T04:00:00.000Z", "2024-06-11T03:45:00.000Z", "2024-06-11T03:30:00.000Z", "2024-06-11T03:15:00.000Z", "2024-06-11T03:00:00.000Z", "2024-06-11T02:45:00.000Z", "2024-06-11T02:30:00.000Z", "2024-06-11T02:15:00.000Z", "2024-06-11T02:00:00.000Z", "2024-06-11T01:45:00.000Z", "2024-06-11T01:30:00.000Z", "2024-06-11T01:15:00.000Z", "2024-06-11T01:00:00.000Z", "2024-06-11T00:45:00.000Z", "2024-06-11T00:30:00.000Z", "2024-06-11T00:15:00.000Z", "2024-06-11T00:00:00.000Z", "2024-06-10T23:45:00.000Z", "2024-06-10T23:30:00.000Z", "2024-06-10T23:15:00.000Z", "2024-06-10T23:00:00.000Z", "2024-06-10T22:45:00.000Z", "2024-06-10T22:30:00.000Z", "2024-06-10T22:15:00.000Z", "2024-06-10T22:00:00.000Z", "2024-06-10T21:45:00.000Z", "2024-06-10T21:30:00.000Z", "2024-06-10T21:15:00.000Z", "2024-06-10T21:00:00.000Z", "2024-06-10T20:45:00.000Z", "2024-06-10T20:30:00.000Z", "2024-06-10T20:15:00.000Z", "2024-06-10T20:00:00.000Z", "2024-06-10T19:45:00.000Z", "2024-06-10T19:30:00.000Z", "2024-06-10T19:15:00.000Z", "2024-06-10T19:00:00.000Z", "2024-06-10T18:45:00.000Z", "2024-06-10T18:30:00.000Z", "2024-06-10T18:15:00.000Z", "2024-06-10T18:00:00.000Z", "2024-06-10T17:45:00.000Z", "2024-06-10T17:30:00.000Z", "2024-06-10T17:15:00.000Z", "2024-06-10T17:00:00.000Z", "2024-06-10T16:45:00.000Z", "2024-06-10T16:30:00.000Z", "2024-06-10T16:15:00.000Z", "2024-06-10T16:00:00.000Z", "2024-06-10T15:45:00.000Z", "2024-06-10T15:30:00.000Z", "2024-06-10T15:15:00.000Z", "2024-06-10T15:00:00.000Z", "2024-06-10T14:45:00.000Z"], "_links": {"add time=2024-06-13T14:45:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T14:45:00.000Z", "add time=2024-06-13T14:30:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T14:30:00.000Z", "add time=2024-06-13T14:15:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T14:15:00.000Z", "add time=2024-06-13T14:00:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T14:00:00.000Z", "add time=2024-06-13T13:45:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T13:45:00.000Z", "add time=2024-06-13T13:30:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T13:30:00.000Z", "add time=2024-06-13T13:15:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T13:15:00.000Z", "add time=2024-06-13T13:00:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T13:00:00.000Z", "add time=2024-06-13T12:45:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T12:45:00.000Z", "add time=2024-06-13T12:30:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T12:30:00.000Z", "add time=2024-06-13T12:15:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T12:15:00.000Z", "add time=2024-06-13T12:00:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T12:00:00.000Z", "add time=2024-06-13T11:45:00.000Z as image param... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<status status="PASS" starttime="20240613 16:30:55.149" endtime="20240613 16:30:55.884"/>
</kw>
<msg timestamp="20240613 16:30:55.884" level="INFO">${get_response} = True</msg>
<status status="PASS" starttime="20240613 16:30:55.148" endtime="20240613 16:30:55.884"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${get_response}'</arg>
<arg>'True'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240613 16:30:55.884" endtime="20240613 16:30:55.885"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>layer=msg_iodc:rgb_natural</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240613 16:30:55.886" level="INFO">${params} = {'layer': 'msg_iodc:rgb_natural'}</msg>
<status status="PASS" starttime="20240613 16:30:55.886" endtime="20240613 16:30:55.886"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${get_response}</var>
<arg>get on session</arg>
<arg>API_testing</arg>
<arg>retrieve-image</arg>
<arg>params=${params}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="GET On Session" library="RequestsLibrary">
<arg>API_testing</arg>
<arg>retrieve-image</arg>
<arg>params=${params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20240613 16:30:56.255" level="INFO">GET Request : url=http://localhost:5000/retrieve-image?layer=msg_iodc%3Argb_natural 
 path_url=/retrieve-image?layer=msg_iodc%3Argb_natural 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240613 16:30:56.594" level="INFO">GET Response : url=http://localhost:5000/retrieve-image?layer=msg_iodc%3Argb_natural 
 status=200, reason=OK 
 headers={'Server': 'Werkzeug/2.2.2 Python/3.9.19', 'Date': 'Thu, 13 Jun 2024 15:30:56 GMT, Thu, 13 Jun 2024 15:30:56 GMT', 'Content-Disposition': 'inline; filename=600-600--77--77-77-77-backgrounds_ne_background-msg_iodc_rgb_natural.jpeg', 'Content-Type': 'image/jpeg', 'Content-Length': '67462', 'Last-Modified': 'Thu, 13 Jun 2024 15:23:59 GMT', 'Cache-Control': 'no-cache', 'ETag': '"1718292239.6390262-67462-1105013261"', 'Access-Control-Allow-Origin': '*', 'Connection': 'close'} 
 body=����JFIF��C		
 $.' ",#(7),01444'9=82&lt;.342��C			2!!22222222222222222222222222222222222222222222222222��XX"��	
���}!1AQa"q2���#B��R��$3br�	
%&amp;'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz���������������������������������������������������������������������������	
���w!1AQaq"2�B����	#3R�br�
$4�%�&amp;'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz��������������������������������������������������������������������������?�(�֟5���RT(ñ��q^���P�&lt;d~5&lt;W��ۼ�|t�H��sU�I�Oq�����$S�
�Dq�NI��MĚ��B�9}k���*����g�a���Ϲ�5�P��q���R/���&lt;?�]�ʲ2��~��?e����tpx�hd��$�݊Xf�d�J�Q�d����Q*V�Y΂{C��z���=qNQ�I�VN��AuYW���&lt;���.#��
�i�c�2RWA��u4��f��p�c��N��q��,LR��K�;Rd���I��FM&amp;M�)��.sL=i�7{
M�ҏBu�H4��S&lt;���fJ��j���84�퐸���d�ŋ��9��ԙ�z��|g�{Uiu��7Χ����r���$(��H���d����Ա�r@����Z�Q���aPrs��B��2��&amp;�_,����W6��J	jA(���x�%w��'5O�V���n����WtU��I��u5�)�&lt;�~c�N� P:S�2��O�Ҕ/=qHP�������HI?�jv�F�:������Ӄ)�}iB�ލ��4m���z�PTu'�O/=�B�&lt;�Zq���P�cҁ� �B�.Xdb��jA�S�I�8��q�d�r�݂M�x�H����"hE̞[u\�i��L��ƐZLs�Q�'�V2�Q�͕�qGe-rp}�8[����5���l�X9��S�U�(ɫ�@(�=�D�jO�����d����h��]�XC!���J ����Ƨyd �uؕȥI����r�x��H�`�Րyg�i;~Ud])$*���N������ư��Q�h�O��j��'��ֈ��`z_:2{���^���.߉�nmЍ�`g�u����)��b3V@FD�N���)}f��q�Z��b(죓�9�`��^���&lt;��q������l���&lt;ܮ�bW�O�U{�K	�F#�[�����U�F�K3�E^��J�Y�n��O\�x���U{�p�=L�%�BؿPH�Կْd��v8����:�����V������t)��f�.m�ܸ��?�I���O�Dj���Y�]%�m�]��$�?�k�]6V���n#xb��\
�8���sԄ�V��M8t�f$�t��!c��x��ٚ4Q�&lt;������sk���丌D	8ۏגh{��T*J�uܩ��4��yu#��?���6�2��"�%�ҝF��3�����;�?CX�}) ���hK��;�z*թT�Z�Ȗ*����z}r�u)�ۢ�,u���褷�s�۟�'��Uk��.?v��R}�ȭ)ֶ�6&amp;�JqWs�#播[��l��l���J�Q���:/`W?ִX�w�)NQ�B���,�ld��Z*�"������f��`wYF3�Tr��bͣK���c�c��Z�]�p����]H��W��1�kp���f��Rt��J�:��&amp;���I mL�?LU#^0&gt;�+��4dTW`������Fa��34c pW�kS�c&lt;"�,�q��b��b�E mv7}@�f��k�RW8�fR��zL��㊲���MϽ(y#��(��q4������k��)�C�������=���u���+J �@�_Q�X���W����\�i�k��e���c~�W7�lLC���3ZK'UN;�g0k�h�A_�r����bQ���J�y]��s�@3�M���I�J�=1Rh!��1�����cޘ���i?	��x�&amp;���L ��ƣy��OwqN�W&lt;w�q��"W+�7��k&gt;[�n�R��{FH?NE[w�L��G�g��I�-昖�� ����Zz̀�^6i��9O�����mn�t�4r(��;��t�B��bV{��a���`���&gt;��@z�+3�8ǚ�nD�՛%�,�E�Dl�ve�oL���*�ڼ�d	q���Q�L�]tc(��8k�2�Є���R����J�[�]ñ�+S$&amp;W�@�E&amp;����M�.8�4���{���`� 
k���ɠ|�I�)0�&gt;��&lt;SI����v�&amp;�A�����
��}�gͫĥ�5;�ˏ���ׯӡ��H��e�������/,x��|ɫf723�0E\��Z������9�	�ӯ��W$��Q�/�2�2ȣ#8��n#��F��j�W�H�Bq�f���K%W*G_M��*�%�7Ta��TM��1���_I�1ׁLCľP�4�!�l��+D�N.~Bĩ_Q��R�|\ƫ��=9�
Z[��Ġ��W?ys�V�c���8�r|��&gt;�暈ݣ�=��\喫ɬ������_���^t&lt;/��Kۙ�pr�0���*������l�ɍ����c���;G���uɮ�SK�+��𤁿@jў��m�Fa�k���XɶV]�̇'߮+DiJ���ƪڧ� ���I����֗4"�с��H~pV6��y�S�M���Hg��S�yǐ:�����ج������eI���Y���v$E1()a�O5&amp;q-��Ϸ�T
K*&amp;z�A����B��J�)?4x�8�cOijh�1�,Y���b�o�	&gt;�o�im�����1�s��=ޯ�k8^K�6��ș$\`����X)ǣ;M�7(������:����;,H��p6ǓP�u�D|��k/k��W�d/i��ɧ#�S��4��w���C��$�����E�E,*�2 6U�dz�TJ.;��^����Oʃ�A}�bjz��kf%��1&gt;V�w�@8������ڋ���$H���
{�S���w�gr��*Eu� C^r|e��2�L��c
%	��NsR��;��c�X�8&gt;V_�\�^�k�*�)�#���moI3�]Ow��EEo��"�w�ey����&amp;Ex����O5zټ��T�`5&lt;�Ct�n�-�o1%E�(A��,�pWonkZ�(ل�agp�c���I���`��=0=�.���?j�v0���{����V!����ԯ�Q��;�T@F]��Z�Ʌ�&gt;^Xg9�I��G�F?W����ī��x�S�鶱bYd����?�^.�]�m����C;~���q&gt;N�&amp;B�rX�����RODuR�&gt;f���p.&lt;�|�뷹��Z�4�N�e$����������1r��#ß֫�f)�I�o��YY~�}K���W�'���~^��C�_d&lt;B�?x.:~Y��G����Pi4x��U+.s��V-NXP��i��O9&lt;c?�#hת�ؤ����X��:I� 9"����-ߘ銫9%k v��dh�'#�a�)�udԽ��(�m��z	ib��p��U\��#��T�����ʳ������j��-��d9�TA?�dC�\E��Å���]T��os�t��4A&amp;�2(7����Uy!�#�'�V�Ƴ�_(�&lt;�pA�{�Ź���R�ͷ9�8��S�-��Z��&amp;�F'�hOZ��=kip@B�$��6qFFqY#��\���
Uv�;��翭eYI��5�ʧ�!�2�����V�&lt;CpS���o3�A��!��Jc��q��Vݳ��&lt;��=�ɯ6��OR)-�4E��
kO����
����SE�����#7`A�%v�
�5�sx�i���m8?�i\�+^l}ᏭG$��Fx��.5��VAi|��}28���B�#��˶O���U)v1uຝ��F�&amp;ENæJý�|�ʑ��D�?�zϒ�i@�fv���C[B�����V�w�N����[���^�g�d5�&gt;�(y�Z�G����QI'�Kz{�\�t��
���r�?�]�["o�ь|��2|���ӳ!�"6�Č��qI�����&lt;�z�Z��`����I��S� ך__ֺY4Hk(�P�&gt;�i4�$G�[���y��=*^.X9�� ����l�:\Q,��(@�##�b�ڝER7��R���!zoL�zp:{S��j���9�0W�B2��!���k#X��[b4��*�K���_�:dgb���sϿ�*��5R�&amp;��s\1RzGC��/�Vs�S�e�O�Gq���~�ն����+�J�$��z�hŶ�-4��G�*Hd+n��.pA��\���t���]&gt;��ݔ��U�][��V����#.��:{�B�ۏ�&lt;��������Q�챧;�s���=��H�r�ĩ\g����E��ڳ���2A,������j���~�\O���1�Y���[���Y&amp;,dj�S�kx��̀}	�M&lt;�h#8l�능�1Q�t��&lt;5�н�U���YIOӯJ�4���3�Pjw�R��3���ڋ�*E�Sy���A�~�Γ�[�S����o&gt;�o
��H����=��Ucy��vR����~5�g�@,��F3��zUK�n��-��,������¥�Z�T�쎭ٔm��ےz
�s�Yڦ^B�zPEp+}��j@�u� �^F!rI��]u��u�Z�O���R�*�)��Ƿ�y&gt;��\���l� ��tvFv��� c�[_,�$�d�#���T3�(.�{O(�EM��;��SE���ܺIgg�Fe=s��_�gw���E��H`q(�������Q�k���ȳ�����mہ�pi��u����l@(�H�:����YK��\[��BQ ���F}�iݡ�1h�&lt;A�LVV��8I��^�ա���� �����\�WCS���Ā�d�ێ��\�sN�&gt;*ӭ|�K;)�L��v��Mi�xxn�fu���QH�Bco��H�Z��?�V�Who��c���y�[;�Ƨb�4`�ll���ǥz��,o�ƻ��2��噏M��'�*�FMU����
\�\�8������mjY4�G�N����yl?�J�� �Ԑ?٣2���J�y��K����@ ��-j��MY�+"j��h�L�ݲu��b���T�$��d� DUG��k��&lt;?$2(2;'f\`��U�je�F9
��O��&gt;��^{-�R�z�庶ܲKL�з͏ζ��\��$J��@�sm	
H"���0w������Mj���+�ݢ:I��(�d�ۜԐi��D/?��&lt;�1޹jP[��U����.x�Mv���p����8�SUB����6mvܤB�h��g��)�N��.�P~�y }}�g&lt;��F.�5�`���^'����i�/�^TUN0O?��=i�sբ�ƅ�W/l�&lt;�'.�^��ma��i-3mۈyb��=��OZ���O��dh%;U�G��z˻��Mmt��	�;��B�B�8����N�n�����d�X�R40�e8�),�=:�y�n��&gt;`?\�U��;�|��Z�s�C�'$u8����k�d]��)�d�&gt;��:�cZtn��F���ɮ�5��F����Oz��"�$1���3���.�qkk�K-���,2L��[�z�EH��27�%b�0I�9�}i�.�u(��Ž����X�!�=2HΊ�=���������}�x��&lt;�MT�W�ݗ�����k�i�OJlw0I�p��Oz����kx��7�v�6h���Պ�o���_�3�u�5�s�C��{�j�F��]z3X��
�byRÁ���m/-3,�񑏟p�&gt;���S����ԧ��΅�$��,���}{���{k�Yw��7��MB�&gt;s����=ϙ&lt;f&lt;�	�`�j��kQ&lt;Jh��|��[gm�i���rI9�4��5ض8^�g&lt;��&amp;2i:c�9�Oқ�L�oO���[���
��(Q�q]~�`H,{3԰�k̓�~��?W�3�Y�`:n$�~��Z�ډ�B���ёXd7�̪	�b���dPv�UA��M�Q�U.���C����ڹ�mξd��@B�U�q��\����3��6��U���jW�,O)�)���¹�s���tQ��g-z��P�����ނ�OQ�I��g5�q�y�$��	&amp;�9�(9�(�4w���QG$�~��O�4����z@({k�����3�I#��Zpx�.Mž��P��b��YN�'��p�8it�i/R����T�&lt;E�\�CtȬ��J9��G�R�Q�$y%��F'�4�B��ӹ��D�2�F�sNej�8&amp;��� ��O�^��)ԩQ*r�#ivri�����:P�)�������|�t�9E��U�ԩ*��=�T�,I�n�)%�3ڢx��:|��)�X骹t2LF
&gt;��i�rP���铁�5-;0�&lt;�#"��G���쭠�P�2�߻y������w�c0�|�)�U���3��r�i��U�wǻj��y@��#��bq�s�s�*6�^bf�~������h�����W�T�&gt;�!4���r\���B1*t�=z�״�@+�6{'��4�&amp;2F���7(+�����Sa�ǘжîOȽ��J�L�'� �،ax'���^���3�9-�Oo�E��𵧘�Ӄ��~���PȄ�L�@�ʰ��{~g��չ&amp;�&lt;�I�~��Aq���Ⱥ6�[�~d�n
�21�r��F:��N7d˸��s�w=�����ApF]2~F$����s�:Vս��h�U����b	*2���p��M�(%n���e�'�L���k!� �%�@W8�߭s�������c	��_���8���3�Z����S�ĐX�[m�$y�����s�ÃT�eƜ�L׺Ӭ�P�R��XnDp������mu+[}M--�L�7`4�ycnA=�����fkVR���ab�A�B�x�j~���V5Yn%U��3�����d孬5��WD櫧]��.�'q��h�Ǩ�^���B�7�K���.6�� &gt;���}��ۉ���m�� �A�C�׬�F�L\��$ga@�=GˌT��pN֋']f��V�4+D�.A�_�\Mf�{9n �Y�{]�����*�s���B�Y�Ӧ��f�q$	p|�	�=G�U�'�M��[��$Ƿ��R==�NI^�J-�Κ�����A=��p��\��q�X��R"&amp;��u��iyeOԃ�N�k��l&gt;ͮ�r.m�\�J708n2F^��6�v�j-�BF�s��� a�Iͨ�(AE�oN�#��K��F8�bہ�P*[="���y��!m�tl9I'�Fy�����^ZA:CN��F7c8�9���Wc�&lt;+mh��H��9##&lt;c�QM��2�FƟ x��\�'�ҭ�`v���C�[�Q�rw*�����M��#$�����8���3�ۙ%���ɽ�֢�K�B�S����y��Xj&amp;եu��y���=��7z��Sy�,�"���c���G,�w��+I���� ���t�%U=��qPV ������eX�bbc�q�sӜ�Ӥҭ~������g��q��4���+�v�
����1)!�s���5&lt;�ט�[7��2P�c�Khne�H#�\݅$�=x�hHeGY2���$�}zs�Ѳ��)�l�3�\��\c��U+���F�����\�e$liOl��8����ԑG�]�Gnx*�n&amp;�o����.��K������{��;�%��q2,���9��\�ɏ@2y��z�ؓ5��S�)�r��@O~�|i��-��ܱ��-7m-��t�Yp�7_��=�̢�6�Ī����ֻ�dH��"����d���ވ�Ŧ�ԍ�,e�a�1�f?1�����z�f��W�hۈC-��;�p��@�݂?{��O곰l��3�9��[v,��YS�7����S�g�Nz�zUu�"s�Wey�HXm��5PI�H#�Ü���V��|��.p˞;vǿ�=��L�Io �Br�zۧ��ұ�S���A��h��-#��FFv�q�&lt;
l��6ܑ�-���靰��Ϟ��q��Q\��fWf'�w|��~�P��G�g=�V���� "���qm3�4��}k3V���l�C����j��
�FeRč��.Y)"f����V_4b9�.���1��'O�%g����l��Z��۾Y��5v'V$WT�Q�V9ia�5�05+4�d�&lt;�:{�g^���8�
O�sz��D�de@'Fx��؎or[�����Gb��)��HE4��r"3IN#�3Fr0pi(*|��q隞��3����U]��(.ǌ�i=�kTY���達�*0��P���&lt;S9��RI-6ެ\�Ӏ��9��LBR�jh�d��.NF(Ű)9c��M��7�(GJ2�M4��\���4����*Q��O(��nA�CRZ��=��5���4�L���B�_ç�L�fT �&gt;Ts�(�d3jri����았7����gQ�q֮��Y4�V�]�5��@�$���f�{/I&lt;��Nk��|��P�%ŹNb���9���6�����҇"�:�]��Hm�my�&amp;���`��sA+��w�ם�i�![���@X�*�����${�զ��a��v�9"~gцs����нY�Ki���BJ���@H���9��1�x�H��+��cN�'�&amp;�Bʧ�����^���"�\���E�{;L��ȑ�^�{�Ҩ��"�?��M1ww�L֦��YZFY�n6���z�*_�}�8Kd��Ϸjq%k�w�Ht��̕
b��G�FO&gt;��X��Vz���-{1H�ȮH0����۟O�x�i�-�E\/��ǯ$�*��!���4�9`*ꑆ���W��=��X#UKD;EH�Ís6DJ�#�L�8��qߚ��]�us.���G��]�L�ִ�-�X\ ��)��c������&gt;���#k���{3q��T�߮�qw�{��S´.n�6��=��&gt;�����?iM���j��`��:�8&lt;*͛��!�d'���s]^��ebk�1�W�3�Q(��Y.2�Uic��!Y��(_��܎�v��K�.^9�&lt;�;��Ǟ8���W�ͅ�&amp;�	Q�,�hq�}k6�_������FP8T�i&gt;�s�i��1t��F���Xd�9��#8
�ׯ��R���u#q��P6�X�:�zs\&amp;��N�n�J�j��$v�2G#��Rk�{Sĳ���~y���t����!ӣ�.f�κ����!��e����sԃ��p~��xS	��_H.'e#��A�k������x�J�a\�p=���5���#������v��`Į�rz`9��?z&amp;�&amp;��k;/������#����&lt;zs�G�\�������Y&lt;c���#���^��TNKͻ��=��ֵ��r2��;f�+�T�1���
z�:���zZ]Cu%ݻrX,��#5g�Y���]|�,�0�8����saqp i6�c� w���=�,K�&lt;U�'�\z�b����#&amp;�X:���gL��֪���@��E�K�*x��x��GF�� �9�(hTfkY�PbW�=���6a�v�F����!;�2�rÑ��T�ݞ�wL�a��K)J�H����!��6;v����7�e���Q�
��'�1�}}�c-Ԓ��gi��֎V�E��p�ՙ,��d�"�U���ON��g�l���8��$����Zw��C#��8UbFO�T���-��������J�FO�wW����'�@P?&gt;{Tjй+�E�N�&gt;����@e��h�"!�9&lt;�������a w9³�ܝ�a����1�Sb�f@eɠ���(8�w��ʰ��`��Q�.��#��nOS�����9|��!
y듌���;q+|��$��;�KčYV�^	;��������$��i'��H�*fN@��qV䷙�8�E��n
=|v��8�R�,�ܐ��H����V�Z�ZY��idYB�Hb99=;z��͕vo���z�i��	m,W͹2.C1\�G|c���SU�ĶpHG��Iefc#g�9����V亗K��Y���t��@nsӦ�=q�\�+.�H$��9�����x+Ek��g��D	#�����.�Kk�x�&amp;8��q�����T����� ��:ϧ?��[V�]6��0�D�wd�&lt;��I��틂1������A��Y �#tk�cԐO#���i�&lt;�� P�\709�;V����]ƭ~�su3lH"�hE���䞕�g&lt;kwuq�eG
��W��I��... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<status status="PASS" starttime="20240613 16:30:55.888" endtime="20240613 16:30:56.597"/>
</kw>
<msg timestamp="20240613 16:30:56.597" level="INFO">${get_response} = True</msg>
<status status="PASS" starttime="20240613 16:30:55.887" endtime="20240613 16:30:56.597"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${get_response}'</arg>
<arg>'True'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240613 16:30:56.598" endtime="20240613 16:30:56.600"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20240613 16:30:56.601" endtime="20240613 16:30:59.329"/>
</kw>
<doc>Validate get all data to API and get response 200.
The following steps are executed:
- Open the API page
- Call list-layers endpoint
- Verify if response is True
- Call list-regions endpoint
- Verify if response is True
- Call list-supported-formats endpoint
- Verify if response is True
- Call list-regions endpoint
- Verify if response is True
- Call add-parameter endpoint
- Verify if response is True
- Call retrieve-image endpoint
- Verify if response is True
- Call list-available-times endpoint
- Verify if response is True</doc>
<status status="PASS" starttime="20240613 16:30:51.390" endtime="20240613 16:30:59.330"/>
</test>
<doc>This test verifies that all the API functions retrieve a 200 response</doc>
<status status="PASS" starttime="20240613 16:30:50.729" endtime="20240613 16:30:59.332"/>
</suite>
<suite id="s1-s1-s1-s2" name="Test-API-TC-020" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery\NG-GALLERY-TestCases\TestsSuites\Test-API-TC-020.robot">
<test id="s1-s1-s1-s2-t1" name="Test-API-TC-020" line="11">
<kw name="Open API" library="commonKeywords" type="SETUP">
<doc>Open the web browser passed as argument (default browser is chrome) and open the API page</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup ${browser}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup chrome" library="commonKeywords">
<doc>Configure the google chrome webdriver</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${options_chrome}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240613 16:30:59.366" level="INFO">${options_chrome} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000024A6E935908&gt;</msg>
<status status="PASS" starttime="20240613 16:30:59.365" endtime="20240613 16:30:59.366"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:30:59.366" endtime="20240613 16:30:59.367"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:30:59.367" endtime="20240613 16:30:59.367"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>enable-automation</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:30:59.368" endtime="20240613 16:30:59.368"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>disable-gpu</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:30:59.368" endtime="20240613 16:30:59.369"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>force-device-scale-factor\=0.65</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:30:59.369" endtime="20240613 16:30:59.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EXECDIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240613 16:30:59.370" level="INFO">C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery</msg>
<status status="PASS" starttime="20240613 16:30:59.369" endtime="20240613 16:30:59.370"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>driver_name=Chrome</arg>
<arg>executable_path=${EXECDIR}/Runners/chromedriver.exe</arg>
<arg>chrome_options=${options_chrome}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20240613 16:30:59.371" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20240613 16:30:59.370" endtime="20240613 16:31:01.742"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20240613 16:31:01.742" endtime="20240613 16:31:01.766"/>
</kw>
<status status="PASS" starttime="20240613 16:30:59.365" endtime="20240613 16:31:01.766"/>
</kw>
<status status="PASS" starttime="20240613 16:30:59.354" endtime="20240613 16:31:01.766"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${ng_api_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20240613 16:31:01.767" level="INFO">Opening url 'http://localhost:5000/'</msg>
<status status="PASS" starttime="20240613 16:31:01.766" endtime="20240613 16:31:02.853"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=ng-api-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:31:03.059" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ng-api-page.png"&gt;&lt;img src="ng-api-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:31:02.854" endtime="20240613 16:31:03.059"/>
</kw>
<status status="PASS" starttime="20240613 16:30:59.353" endtime="20240613 16:31:03.059"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>API_testing</arg>
<arg>${api_base_endpoint}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240613 16:31:03.061" level="INFO">Creating Session using : alias=API_testing, url=http://localhost:5000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240613 16:31:03.060" endtime="20240613 16:31:03.061"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${get_response}</var>
<arg>get on session</arg>
<arg>API_testing</arg>
<arg>retrieve-image</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="GET On Session" library="RequestsLibrary">
<arg>API_testing</arg>
<arg>retrieve-image</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20240613 16:31:03.443" level="INFO">GET Request : url=http://localhost:5000/retrieve-image 
 path_url=/retrieve-image 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240613 16:31:03.443" level="INFO">GET Response : url=http://localhost:5000/retrieve-image 
 status=400, reason=BAD REQUEST 
 headers={'Server': 'Werkzeug/2.2.2 Python/3.9.19', 'Date': 'Thu, 13 Jun 2024 15:31:03 GMT', 'Content-Type': 'application/json', 'Content-Length': '25', 'Access-Control-Allow-Origin': '*', 'Connection': 'close'} 
 body="Cannot get latest time"
 
 </msg>
<msg timestamp="20240613 16:31:03.443" level="FAIL">HTTPError: 400 Client Error: BAD REQUEST for url: http://localhost:5000/retrieve-image</msg>
<status status="FAIL" starttime="20240613 16:31:03.063" endtime="20240613 16:31:03.455"/>
</kw>
<msg timestamp="20240613 16:31:03.456" level="INFO">${get_response} = False</msg>
<status status="PASS" starttime="20240613 16:31:03.062" endtime="20240613 16:31:03.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${get_response}'</arg>
<arg>'False'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240613 16:31:03.456" endtime="20240613 16:31:03.457"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20240613 16:31:03.458" endtime="20240613 16:31:06.174"/>
</kw>
<doc>Test that retrieve-image fails when a layer is not specified.
The following steps are executed:
- Open the API page
- Call retrieve-image endpoint without required parameters
- Verify if response code is 400</doc>
<status status="PASS" starttime="20240613 16:30:59.351" endtime="20240613 16:31:06.175"/>
</test>
<doc>This test verifies that if not include the parameters of the API functions retrieve a 400 response</doc>
<status status="PASS" starttime="20240613 16:30:59.335" endtime="20240613 16:31:06.177"/>
</suite>
<suite id="s1-s1-s1-s3" name="Test-API-TC-030" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery\NG-GALLERY-TestCases\TestsSuites\Test-API-TC-030.robot">
<test id="s1-s1-s1-s3-t1" name="Test-API-TC-030" line="11">
<kw name="Open API" library="commonKeywords" type="SETUP">
<doc>Open the web browser passed as argument (default browser is chrome) and open the API page</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup ${browser}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup chrome" library="commonKeywords">
<doc>Configure the google chrome webdriver</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${options_chrome}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240613 16:31:06.212" level="INFO">${options_chrome} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000024A6FC7A160&gt;</msg>
<status status="PASS" starttime="20240613 16:31:06.212" endtime="20240613 16:31:06.212"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:06.212" endtime="20240613 16:31:06.213"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:06.213" endtime="20240613 16:31:06.213"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>enable-automation</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:06.213" endtime="20240613 16:31:06.214"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>disable-gpu</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:06.214" endtime="20240613 16:31:06.214"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>force-device-scale-factor\=0.65</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:06.215" endtime="20240613 16:31:06.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EXECDIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240613 16:31:06.216" level="INFO">C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery</msg>
<status status="PASS" starttime="20240613 16:31:06.215" endtime="20240613 16:31:06.216"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>driver_name=Chrome</arg>
<arg>executable_path=${EXECDIR}/Runners/chromedriver.exe</arg>
<arg>chrome_options=${options_chrome}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20240613 16:31:06.216" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20240613 16:31:06.216" endtime="20240613 16:31:08.542"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20240613 16:31:08.542" endtime="20240613 16:31:08.571"/>
</kw>
<status status="PASS" starttime="20240613 16:31:06.211" endtime="20240613 16:31:08.572"/>
</kw>
<status status="PASS" starttime="20240613 16:31:06.202" endtime="20240613 16:31:08.572"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${ng_api_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20240613 16:31:08.573" level="INFO">Opening url 'http://localhost:5000/'</msg>
<status status="PASS" starttime="20240613 16:31:08.572" endtime="20240613 16:31:09.789"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=ng-api-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:31:09.930" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ng-api-page.png"&gt;&lt;img src="ng-api-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:31:09.789" endtime="20240613 16:31:09.930"/>
</kw>
<status status="PASS" starttime="20240613 16:31:06.201" endtime="20240613 16:31:09.930"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>API_testing</arg>
<arg>${api_base_endpoint}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240613 16:31:09.932" level="INFO">Creating Session using : alias=API_testing, url=http://localhost:5000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240613 16:31:09.931" endtime="20240613 16:31:09.932"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>layer=msg_iodc:rgb_natural</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240613 16:31:09.934" level="INFO">${params} = {'layer': 'msg_iodc:rgb_natural'}</msg>
<status status="PASS" starttime="20240613 16:31:09.933" endtime="20240613 16:31:09.934"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${get_response}</var>
<arg>API_testing</arg>
<arg>list-available-times</arg>
<arg>params=${params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20240613 16:31:10.328" level="INFO">GET Request : url=http://localhost:5000/list-available-times?layer=msg_iodc%3Argb_natural 
 path_url=/list-available-times?layer=msg_iodc%3Argb_natural 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240613 16:31:10.328" level="INFO">GET Response : url=http://localhost:5000/list-available-times?layer=msg_iodc%3Argb_natural 
 status=200, reason=OK 
 headers={'Server': 'Werkzeug/2.2.2 Python/3.9.19', 'Date': 'Thu, 13 Jun 2024 15:31:10 GMT', 'Content-Type': 'application/json', 'Content-Length': '52332', 'Access-Control-Allow-Origin': '*', 'Connection': 'close'} 
 body={"times": ["2024-06-13T14:45:00.000Z", "2024-06-13T14:30:00.000Z", "2024-06-13T14:15:00.000Z", "2024-06-13T14:00:00.000Z", "2024-06-13T13:45:00.000Z", "2024-06-13T13:30:00.000Z", "2024-06-13T13:15:00.000Z", "2024-06-13T13:00:00.000Z", "2024-06-13T12:45:00.000Z", "2024-06-13T12:30:00.000Z", "2024-06-13T12:15:00.000Z", "2024-06-13T12:00:00.000Z", "2024-06-13T11:45:00.000Z", "2024-06-13T11:30:00.000Z", "2024-06-13T11:15:00.000Z", "2024-06-13T11:00:00.000Z", "2024-06-13T10:45:00.000Z", "2024-06-13T10:30:00.000Z", "2024-06-13T10:15:00.000Z", "2024-06-13T10:00:00.000Z", "2024-06-13T09:45:00.000Z", "2024-06-13T09:30:00.000Z", "2024-06-13T09:15:00.000Z", "2024-06-13T09:00:00.000Z", "2024-06-13T08:45:00.000Z", "2024-06-13T08:30:00.000Z", "2024-06-13T08:15:00.000Z", "2024-06-13T08:00:00.000Z", "2024-06-13T07:45:00.000Z", "2024-06-13T07:30:00.000Z", "2024-06-13T07:15:00.000Z", "2024-06-13T07:00:00.000Z", "2024-06-13T06:45:00.000Z", "2024-06-13T06:30:00.000Z", "2024-06-13T06:15:00.000Z", "2024-06-13T06:00:00.000Z", "2024-06-13T05:45:00.000Z", "2024-06-13T05:30:00.000Z", "2024-06-13T05:15:00.000Z", "2024-06-13T05:00:00.000Z", "2024-06-13T04:45:00.000Z", "2024-06-13T04:30:00.000Z", "2024-06-13T04:15:00.000Z", "2024-06-13T04:00:00.000Z", "2024-06-13T03:45:00.000Z", "2024-06-13T03:30:00.000Z", "2024-06-13T03:15:00.000Z", "2024-06-13T03:00:00.000Z", "2024-06-13T02:45:00.000Z", "2024-06-13T02:30:00.000Z", "2024-06-13T02:15:00.000Z", "2024-06-13T02:00:00.000Z", "2024-06-13T01:45:00.000Z", "2024-06-13T01:30:00.000Z", "2024-06-13T01:15:00.000Z", "2024-06-13T01:00:00.000Z", "2024-06-13T00:45:00.000Z", "2024-06-13T00:30:00.000Z", "2024-06-13T00:15:00.000Z", "2024-06-13T00:00:00.000Z", "2024-06-12T23:45:00.000Z", "2024-06-12T23:30:00.000Z", "2024-06-12T23:15:00.000Z", "2024-06-12T23:00:00.000Z", "2024-06-12T22:45:00.000Z", "2024-06-12T22:30:00.000Z", "2024-06-12T22:15:00.000Z", "2024-06-12T22:00:00.000Z", "2024-06-12T21:45:00.000Z", "2024-06-12T21:30:00.000Z", "2024-06-12T21:15:00.000Z", "2024-06-12T21:00:00.000Z", "2024-06-12T20:45:00.000Z", "2024-06-12T20:30:00.000Z", "2024-06-12T20:15:00.000Z", "2024-06-12T20:00:00.000Z", "2024-06-12T19:45:00.000Z", "2024-06-12T19:30:00.000Z", "2024-06-12T19:15:00.000Z", "2024-06-12T19:00:00.000Z", "2024-06-12T18:45:00.000Z", "2024-06-12T18:30:00.000Z", "2024-06-12T18:15:00.000Z", "2024-06-12T18:00:00.000Z", "2024-06-12T17:45:00.000Z", "2024-06-12T17:30:00.000Z", "2024-06-12T17:15:00.000Z", "2024-06-12T17:00:00.000Z", "2024-06-12T16:45:00.000Z", "2024-06-12T16:30:00.000Z", "2024-06-12T16:15:00.000Z", "2024-06-12T16:00:00.000Z", "2024-06-12T15:45:00.000Z", "2024-06-12T15:30:00.000Z", "2024-06-12T15:15:00.000Z", "2024-06-12T15:00:00.000Z", "2024-06-12T14:45:00.000Z", "2024-06-12T14:30:00.000Z", "2024-06-12T14:15:00.000Z", "2024-06-12T14:00:00.000Z", "2024-06-12T13:45:00.000Z", "2024-06-12T13:30:00.000Z", "2024-06-12T13:15:00.000Z", "2024-06-12T13:00:00.000Z", "2024-06-12T12:45:00.000Z", "2024-06-12T12:30:00.000Z", "2024-06-12T12:15:00.000Z", "2024-06-12T12:00:00.000Z", "2024-06-12T11:45:00.000Z", "2024-06-12T11:30:00.000Z", "2024-06-12T11:15:00.000Z", "2024-06-12T11:00:00.000Z", "2024-06-12T10:45:00.000Z", "2024-06-12T10:30:00.000Z", "2024-06-12T10:15:00.000Z", "2024-06-12T10:00:00.000Z", "2024-06-12T09:45:00.000Z", "2024-06-12T09:30:00.000Z", "2024-06-12T09:15:00.000Z", "2024-06-12T09:00:00.000Z", "2024-06-12T08:45:00.000Z", "2024-06-12T08:30:00.000Z", "2024-06-12T08:15:00.000Z", "2024-06-12T08:00:00.000Z", "2024-06-12T07:45:00.000Z", "2024-06-12T07:30:00.000Z", "2024-06-12T07:15:00.000Z", "2024-06-12T07:00:00.000Z", "2024-06-12T06:45:00.000Z", "2024-06-12T06:30:00.000Z", "2024-06-12T06:15:00.000Z", "2024-06-12T06:00:00.000Z", "2024-06-12T05:45:00.000Z", "2024-06-12T05:30:00.000Z", "2024-06-12T05:15:00.000Z", "2024-06-12T05:00:00.000Z", "2024-06-12T04:45:00.000Z", "2024-06-12T04:30:00.000Z", "2024-06-12T04:15:00.000Z", "2024-06-12T04:00:00.000Z", "2024-06-12T03:45:00.000Z", "2024-06-12T03:30:00.000Z", "2024-06-12T03:15:00.000Z", "2024-06-12T03:00:00.000Z", "2024-06-12T02:45:00.000Z", "2024-06-12T02:30:00.000Z", "2024-06-12T02:15:00.000Z", "2024-06-12T02:00:00.000Z", "2024-06-12T01:45:00.000Z", "2024-06-12T01:30:00.000Z", "2024-06-12T01:15:00.000Z", "2024-06-12T01:00:00.000Z", "2024-06-12T00:45:00.000Z", "2024-06-12T00:30:00.000Z", "2024-06-12T00:15:00.000Z", "2024-06-12T00:00:00.000Z", "2024-06-11T23:45:00.000Z", "2024-06-11T23:30:00.000Z", "2024-06-11T23:15:00.000Z", "2024-06-11T23:00:00.000Z", "2024-06-11T22:45:00.000Z", "2024-06-11T22:30:00.000Z", "2024-06-11T22:15:00.000Z", "2024-06-11T22:00:00.000Z", "2024-06-11T21:45:00.000Z", "2024-06-11T21:30:00.000Z", "2024-06-11T21:15:00.000Z", "2024-06-11T21:00:00.000Z", "2024-06-11T20:45:00.000Z", "2024-06-11T20:30:00.000Z", "2024-06-11T20:15:00.000Z", "2024-06-11T20:00:00.000Z", "2024-06-11T19:45:00.000Z", "2024-06-11T19:30:00.000Z", "2024-06-11T19:15:00.000Z", "2024-06-11T19:00:00.000Z", "2024-06-11T18:45:00.000Z", "2024-06-11T18:30:00.000Z", "2024-06-11T18:15:00.000Z", "2024-06-11T18:00:00.000Z", "2024-06-11T17:45:00.000Z", "2024-06-11T17:30:00.000Z", "2024-06-11T17:15:00.000Z", "2024-06-11T17:00:00.000Z", "2024-06-11T16:45:00.000Z", "2024-06-11T16:30:00.000Z", "2024-06-11T16:15:00.000Z", "2024-06-11T16:00:00.000Z", "2024-06-11T15:45:00.000Z", "2024-06-11T15:30:00.000Z", "2024-06-11T15:15:00.000Z", "2024-06-11T15:00:00.000Z", "2024-06-11T14:45:00.000Z", "2024-06-11T14:30:00.000Z", "2024-06-11T14:15:00.000Z", "2024-06-11T14:00:00.000Z", "2024-06-11T13:45:00.000Z", "2024-06-11T13:30:00.000Z", "2024-06-11T13:15:00.000Z", "2024-06-11T13:00:00.000Z", "2024-06-11T12:45:00.000Z", "2024-06-11T12:30:00.000Z", "2024-06-11T12:15:00.000Z", "2024-06-11T12:00:00.000Z", "2024-06-11T11:45:00.000Z", "2024-06-11T11:30:00.000Z", "2024-06-11T11:15:00.000Z", "2024-06-11T11:00:00.000Z", "2024-06-11T10:45:00.000Z", "2024-06-11T10:30:00.000Z", "2024-06-11T10:15:00.000Z", "2024-06-11T10:00:00.000Z", "2024-06-11T09:45:00.000Z", "2024-06-11T09:30:00.000Z", "2024-06-11T09:15:00.000Z", "2024-06-11T09:00:00.000Z", "2024-06-11T08:45:00.000Z", "2024-06-11T08:30:00.000Z", "2024-06-11T08:15:00.000Z", "2024-06-11T08:00:00.000Z", "2024-06-11T07:45:00.000Z", "2024-06-11T07:30:00.000Z", "2024-06-11T07:15:00.000Z", "2024-06-11T07:00:00.000Z", "2024-06-11T06:45:00.000Z", "2024-06-11T06:30:00.000Z", "2024-06-11T06:15:00.000Z", "2024-06-11T06:00:00.000Z", "2024-06-11T05:45:00.000Z", "2024-06-11T05:30:00.000Z", "2024-06-11T05:15:00.000Z", "2024-06-11T05:00:00.000Z", "2024-06-11T04:45:00.000Z", "2024-06-11T04:30:00.000Z", "2024-06-11T04:15:00.000Z", "2024-06-11T04:00:00.000Z", "2024-06-11T03:45:00.000Z", "2024-06-11T03:30:00.000Z", "2024-06-11T03:15:00.000Z", "2024-06-11T03:00:00.000Z", "2024-06-11T02:45:00.000Z", "2024-06-11T02:30:00.000Z", "2024-06-11T02:15:00.000Z", "2024-06-11T02:00:00.000Z", "2024-06-11T01:45:00.000Z", "2024-06-11T01:30:00.000Z", "2024-06-11T01:15:00.000Z", "2024-06-11T01:00:00.000Z", "2024-06-11T00:45:00.000Z", "2024-06-11T00:30:00.000Z", "2024-06-11T00:15:00.000Z", "2024-06-11T00:00:00.000Z", "2024-06-10T23:45:00.000Z", "2024-06-10T23:30:00.000Z", "2024-06-10T23:15:00.000Z", "2024-06-10T23:00:00.000Z", "2024-06-10T22:45:00.000Z", "2024-06-10T22:30:00.000Z", "2024-06-10T22:15:00.000Z", "2024-06-10T22:00:00.000Z", "2024-06-10T21:45:00.000Z", "2024-06-10T21:30:00.000Z", "2024-06-10T21:15:00.000Z", "2024-06-10T21:00:00.000Z", "2024-06-10T20:45:00.000Z", "2024-06-10T20:30:00.000Z", "2024-06-10T20:15:00.000Z", "2024-06-10T20:00:00.000Z", "2024-06-10T19:45:00.000Z", "2024-06-10T19:30:00.000Z", "2024-06-10T19:15:00.000Z", "2024-06-10T19:00:00.000Z", "2024-06-10T18:45:00.000Z", "2024-06-10T18:30:00.000Z", "2024-06-10T18:15:00.000Z", "2024-06-10T18:00:00.000Z", "2024-06-10T17:45:00.000Z", "2024-06-10T17:30:00.000Z", "2024-06-10T17:15:00.000Z", "2024-06-10T17:00:00.000Z", "2024-06-10T16:45:00.000Z", "2024-06-10T16:30:00.000Z", "2024-06-10T16:15:00.000Z", "2024-06-10T16:00:00.000Z", "2024-06-10T15:45:00.000Z", "2024-06-10T15:30:00.000Z", "2024-06-10T15:15:00.000Z", "2024-06-10T15:00:00.000Z", "2024-06-10T14:45:00.000Z"], "_links": {"add time=2024-06-13T14:45:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T14:45:00.000Z", "add time=2024-06-13T14:30:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T14:30:00.000Z", "add time=2024-06-13T14:15:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T14:15:00.000Z", "add time=2024-06-13T14:00:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T14:00:00.000Z", "add time=2024-06-13T13:45:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T13:45:00.000Z", "add time=2024-06-13T13:30:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T13:30:00.000Z", "add time=2024-06-13T13:15:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T13:15:00.000Z", "add time=2024-06-13T13:00:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T13:00:00.000Z", "add time=2024-06-13T12:45:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T12:45:00.000Z", "add time=2024-06-13T12:30:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T12:30:00.000Z", "add time=2024-06-13T12:15:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T12:15:00.000Z", "add time=2024-06-13T12:00:00.000Z as image parameter": "http://172.17.0.2:5000/add-parameter?layer=msg_iodc:rgb_natural&amp;time=2024-06-13T12:00:00.000Z", "add time=2024-06-13T11:45:00.000Z as image param... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20240613 16:31:10.328" level="INFO">${get_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240613 16:31:09.934" endtime="20240613 16:31:10.328"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${get_response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240613 16:31:10.335" level="INFO">${json_response} = {'times': ['2024-06-13T14:45:00.000Z', '2024-06-13T14:30:00.000Z', '2024-06-13T14:15:00.000Z', '2024-06-13T14:00:00.000Z', '2024-06-13T13:45:00.000Z', '2024-06-13T13:30:00.000Z', '2024-06-13T13:15:00....</msg>
<status status="PASS" starttime="20240613 16:31:10.328" endtime="20240613 16:31:10.335"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${json_response['times']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240613 16:31:10.335" level="INFO">Length is 289</msg>
<msg timestamp="20240613 16:31:10.335" level="INFO">${count} = 289</msg>
<status status="PASS" starttime="20240613 16:31:10.335" endtime="20240613 16:31:10.335"/>
</kw>
<kw name="Should Be Larger Than" library="commonKeywords">
<arg>${count}</arg>
<arg>0</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${value_1} &lt;= ${value_2}</arg>
<arg>Fail</arg>
<arg>The value ${value_1} is not larger than ${value_2}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240613 16:31:10.340" endtime="20240613 16:31:10.341"/>
</kw>
<status status="PASS" starttime="20240613 16:31:10.340" endtime="20240613 16:31:10.341"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${json_response['_links']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240613 16:31:10.341" level="INFO">Length is 289</msg>
<msg timestamp="20240613 16:31:10.341" level="INFO">${count} = 289</msg>
<status status="PASS" starttime="20240613 16:31:10.341" endtime="20240613 16:31:10.341"/>
</kw>
<kw name="Should Be Larger Than" library="commonKeywords">
<arg>${count}</arg>
<arg>0</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${value_1} &lt;= ${value_2}</arg>
<arg>Fail</arg>
<arg>The value ${value_1} is not larger than ${value_2}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240613 16:31:10.341" endtime="20240613 16:31:10.341"/>
</kw>
<status status="PASS" starttime="20240613 16:31:10.341" endtime="20240613 16:31:10.341"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20240613 16:31:10.341" endtime="20240613 16:31:13.077"/>
</kw>
<doc>Verify call endpoint and check that payload does contain time data
The following steps are executed:
- Open the API page
- Call list-available-times with a parameter
- Verify that the response contains values</doc>
<status status="PASS" starttime="20240613 16:31:06.199" endtime="20240613 16:31:13.077"/>
</test>
<doc>This test verifies that if include the parameters (name of the layer) the API functions retrieve a time data.</doc>
<status status="PASS" starttime="20240613 16:31:06.181" endtime="20240613 16:31:13.080"/>
</suite>
<suite id="s1-s1-s1-s4" name="Test-API-TC-040" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery\NG-GALLERY-TestCases\TestsSuites\Test-API-TC-040.robot">
<test id="s1-s1-s1-s4-t1" name="Test-API-TC-040" line="11">
<kw name="Open API" library="commonKeywords" type="SETUP">
<doc>Open the web browser passed as argument (default browser is chrome) and open the API page</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup ${browser}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup chrome" library="commonKeywords">
<doc>Configure the google chrome webdriver</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${options_chrome}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240613 16:31:13.115" level="INFO">${options_chrome} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000024A6FC324E0&gt;</msg>
<status status="PASS" starttime="20240613 16:31:13.115" endtime="20240613 16:31:13.115"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:13.116" endtime="20240613 16:31:13.116"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:13.116" endtime="20240613 16:31:13.117"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>enable-automation</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:13.117" endtime="20240613 16:31:13.117"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>disable-gpu</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:13.117" endtime="20240613 16:31:13.117"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>force-device-scale-factor\=0.65</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:13.118" endtime="20240613 16:31:13.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EXECDIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240613 16:31:13.118" level="INFO">C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery</msg>
<status status="PASS" starttime="20240613 16:31:13.118" endtime="20240613 16:31:13.118"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>driver_name=Chrome</arg>
<arg>executable_path=${EXECDIR}/Runners/chromedriver.exe</arg>
<arg>chrome_options=${options_chrome}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20240613 16:31:13.119" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20240613 16:31:13.118" endtime="20240613 16:31:15.460"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20240613 16:31:15.460" endtime="20240613 16:31:15.483"/>
</kw>
<status status="PASS" starttime="20240613 16:31:13.114" endtime="20240613 16:31:15.483"/>
</kw>
<status status="PASS" starttime="20240613 16:31:13.105" endtime="20240613 16:31:15.483"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${ng_api_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20240613 16:31:15.484" level="INFO">Opening url 'http://localhost:5000/'</msg>
<status status="PASS" starttime="20240613 16:31:15.483" endtime="20240613 16:31:16.607"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=ng-api-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:31:16.727" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ng-api-page.png"&gt;&lt;img src="ng-api-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:31:16.607" endtime="20240613 16:31:16.727"/>
</kw>
<status status="PASS" starttime="20240613 16:31:13.104" endtime="20240613 16:31:16.727"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>API_testing</arg>
<arg>${api_base_endpoint}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240613 16:31:16.727" level="INFO">Creating Session using : alias=API_testing, url=http://localhost:5000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240613 16:31:16.727" endtime="20240613 16:31:16.727"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${get_response}</var>
<arg>API_testing</arg>
<arg>list-regions</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20240613 16:31:16.746" level="INFO">GET Request : url=http://localhost:5000/list-regions 
 path_url=/list-regions 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240613 16:31:16.746" level="INFO">GET Response : url=http://localhost:5000/list-regions 
 status=200, reason=OK 
 headers={'Server': 'Werkzeug/2.2.2 Python/3.9.19', 'Date': 'Thu, 13 Jun 2024 15:31:16 GMT', 'Content-Type': 'application/json', 'Content-Length': '726', 'Access-Control-Allow-Origin': '*', 'Connection': 'close'} 
 body={"regions": {"earth": ["-77.0", "-77.0", "77.0", "77.0"], "northamerica": ["-166", "7", "-52", "77"], "southamerica": ["-87", "-58", "-33", "13"], "europe": ["-11", "34", "32", "64"], "africa": ["-18", "-36", "53", "38"]}, "_links": {"add region=earth as image parameter": "http://172.17.0.2:5000/add-parameter?region=earth", "add region=northamerica as image parameter": "http://172.17.0.2:5000/add-parameter?region=northamerica", "add region=southamerica as image parameter": "http://172.17.0.2:5000/add-parameter?region=southamerica", "add region=europe as image parameter": "http://172.17.0.2:5000/add-parameter?region=europe", "add region=africa as image parameter": "http://172.17.0.2:5000/add-parameter?region=africa"}} 
 </msg>
<msg timestamp="20240613 16:31:16.746" level="INFO">${get_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240613 16:31:16.727" endtime="20240613 16:31:16.746"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${get_response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240613 16:31:16.753" level="INFO">${json_response} = {'regions': {'earth': ['-77.0', '-77.0', '77.0', '77.0'], 'northamerica': ['-166', '7', '-52', '77'], 'southamerica': ['-87', '-58', '-33', '13'], 'europe': ['-11', '34', '32', '64'], 'africa': ['-18'...</msg>
<status status="PASS" starttime="20240613 16:31:16.746" endtime="20240613 16:31:16.753"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${regions_count}</var>
<arg>${json_response['regions']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240613 16:31:16.753" level="INFO">Length is 5</msg>
<msg timestamp="20240613 16:31:16.753" level="INFO">${regions_count} = 5</msg>
<status status="PASS" starttime="20240613 16:31:16.753" endtime="20240613 16:31:16.753"/>
</kw>
<kw name="Should Be Larger Than" library="commonKeywords">
<arg>${regions_count}</arg>
<arg>0</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${value_1} &lt;= ${value_2}</arg>
<arg>Fail</arg>
<arg>The value ${value_1} is not larger than ${value_2}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240613 16:31:16.753" endtime="20240613 16:31:16.758"/>
</kw>
<status status="PASS" starttime="20240613 16:31:16.753" endtime="20240613 16:31:16.758"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{json_response['regions']}</value>
<iter>
<var name="${item}">earth</var>
<kw name="Get Length" library="BuiltIn">
<var>${length}</var>
<arg>${json_response['regions']['${item}']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240613 16:31:16.759" level="INFO">Length is 4</msg>
<msg timestamp="20240613 16:31:16.759" level="INFO">${length} = 4</msg>
<status status="PASS" starttime="20240613 16:31:16.759" endtime="20240613 16:31:16.759"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${length}'</arg>
<arg>'4'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240613 16:31:16.759" endtime="20240613 16:31:16.759"/>
</kw>
<status status="PASS" starttime="20240613 16:31:16.759" endtime="20240613 16:31:16.759"/>
</iter>
<iter>
<var name="${item}">northamerica</var>
<kw name="Get Length" library="BuiltIn">
<var>${length}</var>
<arg>${json_response['regions']['${item}']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240613 16:31:16.759" level="INFO">Length is 4</msg>
<msg timestamp="20240613 16:31:16.759" level="INFO">${length} = 4</msg>
<status status="PASS" starttime="20240613 16:31:16.759" endtime="20240613 16:31:16.759"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${length}'</arg>
<arg>'4'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240613 16:31:16.759" endtime="20240613 16:31:16.759"/>
</kw>
<status status="PASS" starttime="20240613 16:31:16.759" endtime="20240613 16:31:16.759"/>
</iter>
<iter>
<var name="${item}">southamerica</var>
<kw name="Get Length" library="BuiltIn">
<var>${length}</var>
<arg>${json_response['regions']['${item}']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240613 16:31:16.759" level="INFO">Length is 4</msg>
<msg timestamp="20240613 16:31:16.759" level="INFO">${length} = 4</msg>
<status status="PASS" starttime="20240613 16:31:16.759" endtime="20240613 16:31:16.759"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${length}'</arg>
<arg>'4'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240613 16:31:16.759" endtime="20240613 16:31:16.759"/>
</kw>
<status status="PASS" starttime="20240613 16:31:16.759" endtime="20240613 16:31:16.759"/>
</iter>
<iter>
<var name="${item}">europe</var>
<kw name="Get Length" library="BuiltIn">
<var>${length}</var>
<arg>${json_response['regions']['${item}']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240613 16:31:16.759" level="INFO">Length is 4</msg>
<msg timestamp="20240613 16:31:16.759" level="INFO">${length} = 4</msg>
<status status="PASS" starttime="20240613 16:31:16.759" endtime="20240613 16:31:16.759"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${length}'</arg>
<arg>'4'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240613 16:31:16.759" endtime="20240613 16:31:16.759"/>
</kw>
<status status="PASS" starttime="20240613 16:31:16.759" endtime="20240613 16:31:16.759"/>
</iter>
<iter>
<var name="${item}">africa</var>
<kw name="Get Length" library="BuiltIn">
<var>${length}</var>
<arg>${json_response['regions']['${item}']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240613 16:31:16.759" level="INFO">Length is 4</msg>
<msg timestamp="20240613 16:31:16.759" level="INFO">${length} = 4</msg>
<status status="PASS" starttime="20240613 16:31:16.759" endtime="20240613 16:31:16.759"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${length}'</arg>
<arg>'4'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240613 16:31:16.774" endtime="20240613 16:31:16.775"/>
</kw>
<status status="PASS" starttime="20240613 16:31:16.759" endtime="20240613 16:31:16.775"/>
</iter>
<status status="PASS" starttime="20240613 16:31:16.759" endtime="20240613 16:31:16.775"/>
</for>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${json_response['_links']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240613 16:31:16.776" level="INFO">Length is 5</msg>
<msg timestamp="20240613 16:31:16.776" level="INFO">${count} = 5</msg>
<status status="PASS" starttime="20240613 16:31:16.776" endtime="20240613 16:31:16.776"/>
</kw>
<kw name="Should Be Larger Than" library="commonKeywords">
<arg>${count}</arg>
<arg>0</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${value_1} &lt;= ${value_2}</arg>
<arg>Fail</arg>
<arg>The value ${value_1} is not larger than ${value_2}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240613 16:31:16.776" endtime="20240613 16:31:16.776"/>
</kw>
<status status="PASS" starttime="20240613 16:31:16.776" endtime="20240613 16:31:16.776"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20240613 16:31:16.776" endtime="20240613 16:31:19.511"/>
</kw>
<doc>Verify call endpoint and check payload contains a dictionary with elements length 4 (for a valid coordinate)
The following steps are executed:
- Open the API page
- Call list-regions
- Verify if the values all contain 4 values (valid coordinates for a box)</doc>
<status status="PASS" starttime="20240613 16:31:13.102" endtime="20240613 16:31:19.512"/>
</test>
<doc>This test verifies that the API functions retrieve coordinates for each region.</doc>
<status status="PASS" starttime="20240613 16:31:13.083" endtime="20240613 16:31:19.514"/>
</suite>
<suite id="s1-s1-s1-s5" name="Test-API-TC-050" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery\NG-GALLERY-TestCases\TestsSuites\Test-API-TC-050.robot">
<test id="s1-s1-s1-s5-t1" name="Test-API-TC-050" line="11">
<kw name="Open API" library="commonKeywords" type="SETUP">
<doc>Open the web browser passed as argument (default browser is chrome) and open the API page</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup ${browser}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup chrome" library="commonKeywords">
<doc>Configure the google chrome webdriver</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${options_chrome}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240613 16:31:19.553" level="INFO">${options_chrome} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000024A6FC32710&gt;</msg>
<status status="PASS" starttime="20240613 16:31:19.553" endtime="20240613 16:31:19.553"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:19.554" endtime="20240613 16:31:19.554"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:19.554" endtime="20240613 16:31:19.555"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>enable-automation</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:19.555" endtime="20240613 16:31:19.556"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>disable-gpu</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:19.556" endtime="20240613 16:31:19.556"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>force-device-scale-factor\=0.65</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:19.556" endtime="20240613 16:31:19.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EXECDIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240613 16:31:19.557" level="INFO">C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery</msg>
<status status="PASS" starttime="20240613 16:31:19.557" endtime="20240613 16:31:19.558"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>driver_name=Chrome</arg>
<arg>executable_path=${EXECDIR}/Runners/chromedriver.exe</arg>
<arg>chrome_options=${options_chrome}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20240613 16:31:19.558" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20240613 16:31:19.558" endtime="20240613 16:31:22.025"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20240613 16:31:22.027" endtime="20240613 16:31:22.053"/>
</kw>
<status status="PASS" starttime="20240613 16:31:19.552" endtime="20240613 16:31:22.053"/>
</kw>
<status status="PASS" starttime="20240613 16:31:19.541" endtime="20240613 16:31:22.053"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${ng_api_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20240613 16:31:22.054" level="INFO">Opening url 'http://localhost:5000/'</msg>
<status status="PASS" starttime="20240613 16:31:22.053" endtime="20240613 16:31:23.102"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=ng-api-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:31:23.227" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ng-api-page.png"&gt;&lt;img src="ng-api-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:31:23.103" endtime="20240613 16:31:23.227"/>
</kw>
<status status="PASS" starttime="20240613 16:31:19.540" endtime="20240613 16:31:23.227"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>API_testing</arg>
<arg>${api_base_endpoint}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240613 16:31:23.229" level="INFO">Creating Session using : alias=API_testing, url=http://localhost:5000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240613 16:31:23.228" endtime="20240613 16:31:23.229"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${get_response}</var>
<arg>API_testing</arg>
<arg>list-supported-formats</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20240613 16:31:23.244" level="INFO">GET Request : url=http://localhost:5000/list-supported-formats 
 path_url=/list-supported-formats 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240613 16:31:23.244" level="INFO">GET Response : url=http://localhost:5000/list-supported-formats 
 status=200, reason=OK 
 headers={'Server': 'Werkzeug/2.2.2 Python/3.9.19', 'Date': 'Thu, 13 Jun 2024 15:31:23 GMT', 'Content-Type': 'application/json', 'Content-Length': '316', 'Access-Control-Allow-Origin': '*', 'Connection': 'close'} 
 body={"formats": ["tiff", "png", "jpeg"], "_links": {"add format=tiff as image parameter": "http://172.17.0.2:5000/add-parameter?format=tiff", "add format=png as image parameter": "http://172.17.0.2:5000/add-parameter?format=png", "add format=jpeg as image parameter": "http://172.17.0.2:5000/add-parameter?format=jpeg"}} 
 </msg>
<msg timestamp="20240613 16:31:23.244" level="INFO">${get_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240613 16:31:23.230" endtime="20240613 16:31:23.246"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${get_response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240613 16:31:23.248" level="INFO">${json_response} = {'formats': ['tiff', 'png', 'jpeg'], '_links': {'add format=tiff as image parameter': 'http://172.17.0.2:5000/add-parameter?format=tiff', 'add format=png as image parameter': 'http://172.17.0.2:5000/a...</msg>
<status status="PASS" starttime="20240613 16:31:23.246" endtime="20240613 16:31:23.248"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${json_response['formats']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240613 16:31:23.251" level="INFO">Length is 3</msg>
<msg timestamp="20240613 16:31:23.251" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20240613 16:31:23.249" endtime="20240613 16:31:23.251"/>
</kw>
<kw name="Should Be Larger Than" library="commonKeywords">
<arg>${count}</arg>
<arg>0</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${value_1} &lt;= ${value_2}</arg>
<arg>Fail</arg>
<arg>The value ${value_1} is not larger than ${value_2}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240613 16:31:23.253" endtime="20240613 16:31:23.254"/>
</kw>
<status status="PASS" starttime="20240613 16:31:23.252" endtime="20240613 16:31:23.254"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${json_response['_links']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240613 16:31:23.257" level="INFO">Length is 3</msg>
<msg timestamp="20240613 16:31:23.257" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20240613 16:31:23.255" endtime="20240613 16:31:23.257"/>
</kw>
<kw name="Should Be Larger Than" library="commonKeywords">
<arg>${count}</arg>
<arg>0</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${value_1} &lt;= ${value_2}</arg>
<arg>Fail</arg>
<arg>The value ${value_1} is not larger than ${value_2}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240613 16:31:23.259" endtime="20240613 16:31:23.260"/>
</kw>
<status status="PASS" starttime="20240613 16:31:23.258" endtime="20240613 16:31:23.260"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20240613 16:31:23.261" endtime="20240613 16:31:25.953"/>
</kw>
<doc>Verify call endpoint and check that payload does contain formats data (jpeg, png, tiff).
The following steps are executed:
- Open the API page
- Call list-supported-formats
- Verify if content length is greater than 0</doc>
<status status="PASS" starttime="20240613 16:31:19.538" endtime="20240613 16:31:25.954"/>
</test>
<doc>This test verifies that the API functions retrieve list supported format.</doc>
<status status="PASS" starttime="20240613 16:31:19.517" endtime="20240613 16:31:25.956"/>
</suite>
<suite id="s1-s1-s1-s6" name="Test-API-TC-060" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery\NG-GALLERY-TestCases\TestsSuites\Test-API-TC-060.robot">
<test id="s1-s1-s1-s6-t1" name="Test-API-TC-060" line="11">
<kw name="Open API" library="commonKeywords" type="SETUP">
<doc>Open the web browser passed as argument (default browser is chrome) and open the API page</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup ${browser}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup chrome" library="commonKeywords">
<doc>Configure the google chrome webdriver</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${options_chrome}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240613 16:31:26.001" level="INFO">${options_chrome} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000024A6FCA0208&gt;</msg>
<status status="PASS" starttime="20240613 16:31:26.001" endtime="20240613 16:31:26.001"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:26.002" endtime="20240613 16:31:26.002"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:26.003" endtime="20240613 16:31:26.003"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>enable-automation</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:26.003" endtime="20240613 16:31:26.004"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>disable-gpu</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:26.004" endtime="20240613 16:31:26.005"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>force-device-scale-factor\=0.65</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:26.005" endtime="20240613 16:31:26.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EXECDIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240613 16:31:26.006" level="INFO">C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery</msg>
<status status="PASS" starttime="20240613 16:31:26.006" endtime="20240613 16:31:26.006"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>driver_name=Chrome</arg>
<arg>executable_path=${EXECDIR}/Runners/chromedriver.exe</arg>
<arg>chrome_options=${options_chrome}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20240613 16:31:26.008" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20240613 16:31:26.007" endtime="20240613 16:31:28.225"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20240613 16:31:28.226" endtime="20240613 16:31:28.252"/>
</kw>
<status status="PASS" starttime="20240613 16:31:26.000" endtime="20240613 16:31:28.253"/>
</kw>
<status status="PASS" starttime="20240613 16:31:25.986" endtime="20240613 16:31:28.253"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${ng_api_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20240613 16:31:28.254" level="INFO">Opening url 'http://localhost:5000/'</msg>
<status status="PASS" starttime="20240613 16:31:28.253" endtime="20240613 16:31:29.336"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=ng-api-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:31:29.463" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ng-api-page.png"&gt;&lt;img src="ng-api-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:31:29.337" endtime="20240613 16:31:29.465"/>
</kw>
<status status="PASS" starttime="20240613 16:31:25.985" endtime="20240613 16:31:29.465"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>API_testing</arg>
<arg>${api_base_endpoint}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240613 16:31:29.466" level="INFO">Creating Session using : alias=API_testing, url=http://localhost:5000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240613 16:31:29.466" endtime="20240613 16:31:29.467"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${get_response}</var>
<arg>API_testing</arg>
<arg>list-layers</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20240613 16:31:29.483" level="INFO">GET Request : url=http://localhost:5000/list-layers 
 path_url=/list-layers 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240613 16:31:29.483" level="INFO">GET Response : url=http://localhost:5000/list-layers 
 status=200, reason=OK 
 headers={'Server': 'Werkzeug/2.2.2 Python/3.9.19', 'Date': 'Thu, 13 Jun 2024 15:31:29 GMT', 'Content-Type': 'application/json', 'Content-Length': '46517', 'Access-Control-Allow-Origin': '*', 'Connection': 'close'} 
 body={"configuration": {"MSGIODC Imagery": [{"name": "msg_iodc:ir039", "title": "High Rate SEVIRI IR3.9 \u03bcm Image - MSG - Indian Ocean", "alias": "layer alias", "description": "Rectified (level 1.5) Meteosat SEVIRI image data. The data is transmitted as High Rate transmissions in 12 spectral channels. Level 1.5 image data corresponds to the geolocated and radiometrically pre-processed image data, ready for further processing, e.g. the extraction of meteorological products. Any spacecraft specific effects have been removed, and in particular, linearisation and equalisation of the image radiometry has been performed for all SEVIRI channels. The on-board blackbody data has been processed. Both radiometric and geometric quality control information is included. To enhance the perception for areas which are on the night side of the Earth a different mapping with increased contrast is applied for IR3.9 product. The greyscale mapping is based on the EBBT which allows to map the ranges 200 K to 300 K for the night and 250 K to 330 K for the day.&amp;#13;&amp;#10;&amp;#13;&amp;#10;From 1 June 2022, Meteosat-9 at 45.5\u00b0 E is the prime satellite for the IODC service, replacing Meteosat-8 (located at 41.5\u00b0 E while in operation).", "features": "backgrounds:ne_boundary_lines_land", "icon": "https://img.icons8.com/ios/50/FFFFFF/globe--v1.png", "projection": "AUTO:42003,9001,45.5,0", "bbox": [-10000000, -10000000, 10000000, 10000000]}, {"name": "msg_iodc:ir108", "title": "High Rate SEVIRI IR10.8 \u03bcm Image - MSG - Indian Ocean", "alias": "layer alias", "description": "Rectified (level 1.5) Meteosat SEVIRI image data. The data is transmitted as High Rate transmissions in 12 spectral channels. Level 1.5 image data corresponds to the geolocated and radiometrically pre-processed image data, ready for further processing, e.g. the extraction of meteorological products. Any spacecraft specific effects have been removed, and in particular, linearisation and equalisation of the image radiometry has been performed for all SEVIRI channels. The on-board blackbody data has been processed. Both radiometric and geometric quality control information is included.&amp;#13;&amp;#10;&amp;#13;&amp;#10;&amp;#13;&amp;#10;From 1 June 2022, Meteosat-9 at 45.5\u00b0 E is the prime satellite for the IODC service, replacing Meteosat-8 (located at 41.5\u00b0 E while in operation).", "features": "backgrounds:ne_boundary_lines_land", "icon": "https://img.icons8.com/ios/50/FFFFFF/globe--v1.png", "projection": "AUTO:42003,9001,45.5,0", "bbox": [-10000000, -10000000, 10000000, 10000000]}], "MSGIODC RGB Composites": [{"name": "msg_iodc:rgb_airmass", "title": "Airmass RGB - MSG - Indian Ocean", "alias": "layer alias", "description": "The Airmass product is an RGB (Red, Green, Blue) composite based upon data from infrared and water vapour channels from the SEVIRI instrument. It is designed and tuned to monitor the distribution of different air masses and evolution of cyclones, in particular rapid cyclogenesis, jet streaks and PV (potential vorticity) anomalies. Due to the incorporation of the water vapour and ozone channels, its usage at highest satellite viewing angles is limited. The Airmass RGB is composed from data from a combination of the SEVIRI WV6.2, WV7.3, IR9.7 and IR10.8 channels.&amp;#13;&amp;#10;&amp;#13;&amp;#10;From 1 June 2022, Meteosat-9 at 45.5\u00b0 E is the prime satellite for the IODC service, replacing Meteosat-8 (located at 41.5\u00b0 E while in operation).", "features": "backgrounds:ne_boundary_lines_land", "icon": "https://img.icons8.com/ios/50/FFFFFF/globe--v1.png", "projection": "AUTO:42003,9001,45.5,0", "bbox": [-10000000, -10000000, 10000000, 10000000]}, {"name": "msg_iodc:rgb_ash", "title": "Volcanic Ash RGB - MSG - Indian Ocean", "alias": "layer alias", "description": "The Ash product is an RGB (Red, Green, Blue) composite based upon infrared channel data from the Meteosat Second Generation satellite. It is designed to detect ash and sulphur dioxide (SO2) from volcanic eruptions which can be used for the provision of warnings to aviation authorities. The Ash RGB is composed from data from a combination of the SEVIRI IR8.7, IR10.8 and IR12.0 channels.&amp;#13;&amp;#10;&amp;#13;&amp;#10;From 1 June 2022, Meteosat-9 at 45.5\u00b0 E is the prime satellite for the IODC service, replacing Meteosat-8 (located at 41.5\u00b0 E while in operation).", "features": "backgrounds:ne_boundary_lines_land", "icon": "https://img.icons8.com/ios/50/FFFFFF/globe--v1.png", "projection": "AUTO:42003,9001,45.5,0", "bbox": [-10000000, -10000000, 10000000, 10000000]}, {"name": "msg_iodc:rgb_convection", "title": "Convection RGB - MSG - Indian Ocean", "alias": "layer alias", "description": "The Convection RGB combines the brightness temperature difference (BTD) between the WV6.2 and WV7.3 channels (on red), the BTD between the IR3.9 and IR10.8 channels (on green) and the reflectance difference between the NIR1.6 and the VIS0.6 channels (on blue). Severe convective storms appear bright yellow in this color scheme because of the near zero BTD WV6.2-WV7.3 of overshooting Cb clouds (high red). The strong updrafts in these clouds produce small ice particles at cloud tops due to homogeneous freezing of cloud drops, resulting with large BTD IR3.9-IR10.8 (high green). Finally, large negative values of NIR1.6-VIS0.6 because of the large absorption at NIR1.6 by ice particles keeps the blue very low. Please note that small ice crystals of Cirrus clouds should not be confused with vigorous convection. Inferred small ice crystals that are not associated with anvils of Cb clouds must form by elevated strong updrafts, such as in high altitude orographic wave clouds.&amp;#13;&amp;#10;&amp;#13;&amp;#10;From 1 June 2022, Meteosat-9 at 45.5\u00b0 E is the prime satellite for the IODC service, replacing Meteosat-8 (located at 41.5\u00b0 E while in operation).", "features": "backgrounds:ne_boundary_lines_land", "icon": "https://img.icons8.com/ios/50/FFFFFF/globe--v1.png", "projection": "AUTO:42003,9001,45.5,0", "bbox": [-10000000, -10000000, 10000000, 10000000]}, {"name": "msg_iodc:rgb_dust", "title": "Dust RGB - MSG - Indian Ocean", "alias": "layer alias", "description": "The Dust product is an RGB (Red, Green, Blue) composite based upon infrared channel data from the Meteosat Second Generation satellite. It is designed to monitor the evolution of dust storms during both day and night. But it is also useful for discrimination of cloud types (e.g. thin Cirrus detection) and detection of low level moisture. The Dust RGB is composed from data from a combination of the SEVIRI IR8.7, IR10.8 and IR12.0 channels.&amp;#13;&amp;#10;&amp;#13;&amp;#10;From 1 June 2022, Meteosat-9 at 45.5\u00b0 E is the prime satellite for the IODC service, replacing Meteosat-8 (located at 41.5\u00b0 E while in operation).", "features": "backgrounds:ne_boundary_lines_land", "icon": "https://img.icons8.com/ios/50/FFFFFF/globe--v1.png", "projection": "AUTO:42003,9001,45.5,0", "bbox": [-10000000, -10000000, 10000000, 10000000]}, {"name": "msg_iodc:rgb_eview", "title": "European HRV RGB - MSG - Indian Ocean", "alias": "layer alias", "description": "The E-View product is an RGB (Red, Green, Blue) composite based upon data from the SEVIRI instrument. It is dedicated to detailed cloud monitoring of the European region. It is based on data from the SEVIRI High Resolution Visible channel combined with data from the IR10.8 channel that provides the temperature information (blue component).&amp;#13;&amp;#10;&amp;#13;&amp;#10;From 1 June 2022, Meteosat-9 at 45.5\u00b0 E is the prime satellite for the IODC service, replacing Meteosat-8 (located at 41.5\u00b0 E while in operation).", "features": "backgrounds:ne_boundary_lines_land", "icon": "https://img.icons8.com/ios/50/FFFFFF/globe--v1.png", "projection": "AUTO:42003,9001,45.5,0", "bbox": [-10000000, -10000000, 10000000, 10000000]}, {"name": "msg_iodc:rgb_fog", "title": "Fog / Low Clouds RGB - MSG - Indian Ocean", "alias": "layer alias", "description": "The Fog / Low Clouds product is an RGB (Red, Green, Blue) composite based upon infrared channel data from the Meteosat Second Generation satellite. It is designed and tuned to monitor the evolution of night-time fog / low stratus. Other (secondary) applications are the detection of fires, low-level moisture boundaries and cloud classification in general. It should be noted that as the product is tuned for night-time conditions, its use during day-time is very limited. The Fog / Low Clouds RGB is composed from data from a combination of the SEVIRI IR3.9, IR10.8 and IR12.0 channels&amp;#13;&amp;#10;&amp;#13;&amp;#10;From 1 June 2022, Meteosat-9 at 45.5\u00b0 E is the prime satellite for the IODC service, replacing Meteosat-8 (located at 41.5\u00b0 E while in operation).", "features": "backgrounds:ne_boundary_lines_land", "icon": "https://img.icons8.com/ios/50/FFFFFF/globe--v1.png", "projection": "AUTO:42003,9001,45.5,0", "bbox": [-10000000, -10000000, 10000000, 10000000]}, {"name": "msg_iodc:rgb_microphysics", "title": "Day Microphysics RGB - MSG - Indian Ocean", "alias": "layer alias", "description": "The Day Microphysics RGB (Red, Green, Blue) was inherited from Rosenfeld and Lensky (1998): the VIS0.8 reflectance in red approximates the cloud optical depth and amount of cloud water and ice; the IR3.9 solar reflectance in green is a qualitative measure for cloud particle size and phase, and the IR10.8 brightness temperature modulates the blue. This color scheme is useful for cloud analysis, convection, fog, snow, and fires. In this colour scheme water clouds that do not precipitate appear white because cloud drops are small, whereas large drops that are typical to precipitating clouds appear pink, because of the low reflectance at IR3.9 manifested as low green. Supercooled water clouds appear more yellow, because the lower temperature that modulate the blue component. Cold and thick clouds with tops composed of large ice particles, e.g., Cb tops, appear red. Optically thick clouds with small ice particles near their tops appear orange. &amp;#13;&amp;#... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20240613 16:31:29.484" level="INFO">${get_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240613 16:31:29.467" endtime="20240613 16:31:29.484"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${get_response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240613 16:31:29.490" level="INFO">${json_response} = {'configuration': {'MSGIODC Imagery': [{'name': 'msg_iodc:ir039', 'title': 'High Rate SEVIRI IR3.9 μm Image - MSG - Indian Ocean', 'alias': 'layer alias', 'description': 'Rectified (level 1.5) Meteosa...</msg>
<status status="PASS" starttime="20240613 16:31:29.485" endtime="20240613 16:31:29.490"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${json_response['configuration']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240613 16:31:29.492" level="INFO">Length is 6</msg>
<msg timestamp="20240613 16:31:29.493" level="INFO">${count} = 6</msg>
<status status="PASS" starttime="20240613 16:31:29.491" endtime="20240613 16:31:29.493"/>
</kw>
<kw name="Should Be Larger Than" library="commonKeywords">
<arg>${count}</arg>
<arg>0</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${value_1} &lt;= ${value_2}</arg>
<arg>Fail</arg>
<arg>The value ${value_1} is not larger than ${value_2}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240613 16:31:29.494" endtime="20240613 16:31:29.496"/>
</kw>
<status status="PASS" starttime="20240613 16:31:29.493" endtime="20240613 16:31:29.496"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${json_response['_links']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240613 16:31:29.499" level="INFO">Length is 43</msg>
<msg timestamp="20240613 16:31:29.499" level="INFO">${count} = 43</msg>
<status status="PASS" starttime="20240613 16:31:29.497" endtime="20240613 16:31:29.499"/>
</kw>
<kw name="Should Be Larger Than" library="commonKeywords">
<arg>${count}</arg>
<arg>0</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${value_1} &lt;= ${value_2}</arg>
<arg>Fail</arg>
<arg>The value ${value_1} is not larger than ${value_2}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240613 16:31:29.500" endtime="20240613 16:31:29.501"/>
</kw>
<status status="PASS" starttime="20240613 16:31:29.499" endtime="20240613 16:31:29.501"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20240613 16:31:29.502" endtime="20240613 16:31:32.183"/>
</kw>
<doc>Verify call endpoint and check that payload does contain layers data.
The following steps are executed:
- Open the API page
- Call list-layers
- Verify if content length is greater than 0</doc>
<status status="PASS" starttime="20240613 16:31:25.982" endtime="20240613 16:31:32.183"/>
</test>
<doc>This test verifies that the API functions retrieve list of layers</doc>
<status status="PASS" starttime="20240613 16:31:25.960" endtime="20240613 16:31:32.186"/>
</suite>
<suite id="s1-s1-s1-s7" name="Test-GUI-TC-010" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery\NG-GALLERY-TestCases\TestsSuites\Test-GUI-TC-010.robot">
<test id="s1-s1-s1-s7-t1" name="Test-GUI-TC-010" line="11">
<kw name="Open NG GALLERY" library="commonKeywords" type="SETUP">
<doc>Open the web browser passed as argument (default browser is chrome) and open the NG GALLERY webpage</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup ${browser}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup chrome" library="commonKeywords">
<doc>Configure the google chrome webdriver</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${options_chrome}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240613 16:31:32.227" level="INFO">${options_chrome} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000024A6FCC3FD0&gt;</msg>
<status status="PASS" starttime="20240613 16:31:32.226" endtime="20240613 16:31:32.227"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:32.228" endtime="20240613 16:31:32.228"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:32.228" endtime="20240613 16:31:32.230"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>enable-automation</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:32.230" endtime="20240613 16:31:32.231"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>disable-gpu</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:32.231" endtime="20240613 16:31:32.232"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>force-device-scale-factor\=0.65</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:32.232" endtime="20240613 16:31:32.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EXECDIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240613 16:31:32.233" level="INFO">C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery</msg>
<status status="PASS" starttime="20240613 16:31:32.233" endtime="20240613 16:31:32.233"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>driver_name=Chrome</arg>
<arg>executable_path=${EXECDIR}/Runners/chromedriver.exe</arg>
<arg>chrome_options=${options_chrome}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20240613 16:31:32.234" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20240613 16:31:32.233" endtime="20240613 16:31:34.467"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20240613 16:31:34.468" endtime="20240613 16:31:34.493"/>
</kw>
<status status="PASS" starttime="20240613 16:31:32.225" endtime="20240613 16:31:34.493"/>
</kw>
<status status="PASS" starttime="20240613 16:31:32.211" endtime="20240613 16:31:34.493"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${ng_galleryl_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20240613 16:31:34.494" level="INFO">Opening url 'http://localhost:80/'</msg>
<status status="PASS" starttime="20240613 16:31:34.494" endtime="20240613 16:31:35.208"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=ng-gallery-main-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:31:35.297" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ng-gallery-main-page.png"&gt;&lt;img src="ng-gallery-main-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:31:35.209" endtime="20240613 16:31:35.298"/>
</kw>
<status status="PASS" starttime="20240613 16:31:32.210" endtime="20240613 16:31:35.298"/>
</kw>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<arg>${SELENIUM_SPEED}</arg>
<doc>Sets the delay that is waited after each Selenium command.</doc>
<status status="PASS" starttime="20240613 16:31:35.299" endtime="20240613 16:31:35.300"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=NG-gallery-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:31:35.889" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="NG-gallery-page.png"&gt;&lt;img src="NG-gallery-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:31:35.301" endtime="20240613 16:31:35.889"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${RETRY_ATTEMPTS}</arg>
<arg>${RETRY_INTERVAL}</arg>
<arg>Page Should Contain Element</arg>
<arg>${EUMETSAT_LOGO_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${EUMETSAT_LOGO_BUTTON}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20240613 16:31:36.427" level="INFO">Current page contains element 'xpath://*[@class='navbar-item']/a'.</msg>
<status status="PASS" starttime="20240613 16:31:35.892" endtime="20240613 16:31:36.427"/>
</kw>
<status status="PASS" starttime="20240613 16:31:35.890" endtime="20240613 16:31:36.428"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${EUMETSAT_LOGO_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:31:36.429" level="INFO">Clicking element 'xpath://*[@class='navbar-item']/a'.</msg>
<status status="PASS" starttime="20240613 16:31:36.428" endtime="20240613 16:31:37.518"/>
</kw>
<kw name="Switch Window" library="SeleniumLibrary">
<arg>NEW</arg>
<doc>Switches to browser window matching ``locator``.</doc>
<status status="PASS" starttime="20240613 16:31:37.518" endtime="20240613 16:31:39.563"/>
</kw>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20240613 16:31:40.261" level="INFO">${url} = https://www.eumetsat.int/</msg>
<status status="PASS" starttime="20240613 16:31:39.564" endtime="20240613 16:31:40.261"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${url}</arg>
<arg>https://www.eumetsat.int/</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240613 16:31:40.262" endtime="20240613 16:31:40.262"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=EUMETSAT-corporate-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:31:40.865" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="EUMETSAT-corporate-page.png"&gt;&lt;img src="EUMETSAT-corporate-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:31:40.263" endtime="20240613 16:31:40.865"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20240613 16:31:40.866" endtime="20240613 16:31:43.938"/>
</kw>
<doc>Validates if the EUMESAT logo hyperlink leads to the EUMETSAT corporate website.
The following steps are executed:
- Open the NG Gallery page
- Click on the EUMETSAT logo in the upper-left corner
- Verify if EUMETSAT corporate website open</doc>
<status status="PASS" starttime="20240613 16:31:32.208" endtime="20240613 16:31:43.939"/>
</test>
<doc>This test validates the access to https://www.eumetsat.int/ selecting the EUMETSAT logo.</doc>
<status status="PASS" starttime="20240613 16:31:32.190" endtime="20240613 16:31:43.941"/>
</suite>
<suite id="s1-s1-s1-s8" name="Test-GUI-TC-020" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery\NG-GALLERY-TestCases\TestsSuites\Test-GUI-TC-020.robot">
<test id="s1-s1-s1-s8-t1" name="Test-GUI-TC-020" line="11">
<kw name="Open NG GALLERY" library="commonKeywords" type="SETUP">
<doc>Open the web browser passed as argument (default browser is chrome) and open the NG GALLERY webpage</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup ${browser}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup chrome" library="commonKeywords">
<doc>Configure the google chrome webdriver</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${options_chrome}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240613 16:31:43.985" level="INFO">${options_chrome} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000024A6FCDCF98&gt;</msg>
<status status="PASS" starttime="20240613 16:31:43.984" endtime="20240613 16:31:43.985"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:43.985" endtime="20240613 16:31:43.986"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:43.986" endtime="20240613 16:31:43.987"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>enable-automation</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:43.987" endtime="20240613 16:31:43.987"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>disable-gpu</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:43.988" endtime="20240613 16:31:43.988"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>force-device-scale-factor\=0.65</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:31:43.988" endtime="20240613 16:31:43.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EXECDIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240613 16:31:43.989" level="INFO">C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery</msg>
<status status="PASS" starttime="20240613 16:31:43.989" endtime="20240613 16:31:43.989"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>driver_name=Chrome</arg>
<arg>executable_path=${EXECDIR}/Runners/chromedriver.exe</arg>
<arg>chrome_options=${options_chrome}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20240613 16:31:43.990" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20240613 16:31:43.989" endtime="20240613 16:31:46.142"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20240613 16:31:46.143" endtime="20240613 16:31:46.165"/>
</kw>
<status status="PASS" starttime="20240613 16:31:43.983" endtime="20240613 16:31:46.165"/>
</kw>
<status status="PASS" starttime="20240613 16:31:43.969" endtime="20240613 16:31:46.165"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${ng_galleryl_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20240613 16:31:46.166" level="INFO">Opening url 'http://localhost:80/'</msg>
<status status="PASS" starttime="20240613 16:31:46.166" endtime="20240613 16:31:46.785"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=ng-gallery-main-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:31:46.862" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ng-gallery-main-page.png"&gt;&lt;img src="ng-gallery-main-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:31:46.785" endtime="20240613 16:31:46.863"/>
</kw>
<status status="PASS" starttime="20240613 16:31:43.968" endtime="20240613 16:31:46.863"/>
</kw>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<arg>${SELENIUM_SPEED}</arg>
<doc>Sets the delay that is waited after each Selenium command.</doc>
<status status="PASS" starttime="20240613 16:31:46.864" endtime="20240613 16:31:46.865"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=NG-gallery-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:31:47.446" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="NG-gallery-page.png"&gt;&lt;img src="NG-gallery-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:31:46.865" endtime="20240613 16:31:47.446"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:31:47.448" level="INFO">Clicking element 'xpath://*[@class='mat-mdc-select-value']'.</msg>
<status status="PASS" starttime="20240613 16:31:47.447" endtime="20240613 16:31:48.528"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=drop-down-box.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:31:49.097" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="drop-down-box.png"&gt;&lt;img src="drop-down-box.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:31:48.529" endtime="20240613 16:31:49.097"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${RETRY_ATTEMPTS}</arg>
<arg>${RETRY_INTERVAL}</arg>
<arg>Page Should Contain Element</arg>
<arg>${DROP_DOWN_BOX_PRODUCT_TYPE}//*[contains(text(),' MSGIODC Visualised Products ')]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX_PRODUCT_TYPE}//*[contains(text(),' MSGIODC Visualised Products ')]</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20240613 16:31:49.623" level="INFO">Current page contains element 'xpath://*[@id='cdk-overlay-0']//*[contains(text(),' MSGIODC Visualised Products ')]'.</msg>
<status status="PASS" starttime="20240613 16:31:49.098" endtime="20240613 16:31:49.623"/>
</kw>
<status status="PASS" starttime="20240613 16:31:49.098" endtime="20240613 16:31:49.623"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX_PRODUCT_TYPE}//*[contains(text(),' MSGIODC Visualised Products ')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:31:49.625" level="INFO">Clicking element 'xpath://*[@id='cdk-overlay-0']//*[contains(text(),' MSGIODC Visualised Products ')]'.</msg>
<status status="PASS" starttime="20240613 16:31:49.624" endtime="20240613 16:31:50.700"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=drop-down-box-products-type.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:31:51.262" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="drop-down-box-products-type.png"&gt;&lt;img src="drop-down-box-products-type.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:31:50.700" endtime="20240613 16:31:51.262"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${RETRY_ATTEMPTS}</arg>
<arg>${RETRY_INTERVAL}</arg>
<arg>Page Should Contain Element</arg>
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'Cloud Top Height - MSG - Indian Ocean')]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'Cloud Top Height - MSG - Indian Ocean')]</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20240613 16:31:51.780" level="INFO">Current page contains element 'xpath://*[@role="listbox"]//*[contains(text(),'Cloud Top Height - MSG - Indian Ocean')]'.</msg>
<status status="PASS" starttime="20240613 16:31:51.262" endtime="20240613 16:31:51.780"/>
</kw>
<status status="PASS" starttime="20240613 16:31:51.262" endtime="20240613 16:31:51.780"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'Cloud Top Height - MSG - Indian Ocean')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:31:51.782" level="INFO">Clicking element 'xpath://*[@role="listbox"]//*[contains(text(),'Cloud Top Height - MSG - Indian Ocean')]'.</msg>
<status status="PASS" starttime="20240613 16:31:51.781" endtime="20240613 16:31:52.838"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240613 16:31:57.849" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240613 16:31:52.839" endtime="20240613 16:31:57.849"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=list-box-layers.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:31:58.419" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="list-box-layers.png"&gt;&lt;img src="list-box-layers.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:31:57.849" endtime="20240613 16:31:58.420"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${RETRY_ATTEMPTS}</arg>
<arg>${RETRY_INTERVAL}</arg>
<arg>Page Should Contain Element</arg>
<arg>${ZOOM_IN}</arg>
<arg>${ZOOM_OUT}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${ZOOM_IN}</arg>
<arg>${ZOOM_OUT}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20240613 16:31:58.946" level="INFO">Current page contains element 'xpath://*[@class="ol-zoom-in"]'.</msg>
<status status="PASS" starttime="20240613 16:31:58.421" endtime="20240613 16:31:58.946"/>
</kw>
<status status="PASS" starttime="20240613 16:31:58.420" endtime="20240613 16:31:58.946"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ZOOM_IN}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:31:58.947" level="INFO">Clicking element 'xpath://*[@class="ol-zoom-in"]'.</msg>
<status status="PASS" starttime="20240613 16:31:58.947" endtime="20240613 16:32:00.029"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ZOOM_IN}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:32:00.030" level="INFO">Clicking element 'xpath://*[@class="ol-zoom-in"]'.</msg>
<status status="PASS" starttime="20240613 16:32:00.029" endtime="20240613 16:32:01.238"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240613 16:32:06.250" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240613 16:32:01.239" endtime="20240613 16:32:06.250"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=zoom-in-two-clicks.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:32:06.907" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="zoom-in-two-clicks.png"&gt;&lt;img src="zoom-in-two-clicks.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:32:06.250" endtime="20240613 16:32:06.907"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ZOOM_OUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:32:06.907" level="INFO">Clicking element 'xpath://*[@class="ol-zoom-out"]'.</msg>
<status status="PASS" starttime="20240613 16:32:06.907" endtime="20240613 16:32:07.981"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ZOOM_OUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:32:07.982" level="INFO">Clicking element 'xpath://*[@class="ol-zoom-out"]'.</msg>
<status status="PASS" starttime="20240613 16:32:07.981" endtime="20240613 16:32:09.167"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240613 16:32:14.174" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240613 16:32:09.167" endtime="20240613 16:32:14.175"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=zoom-out-two-clicks.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:32:14.775" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="zoom-out-two-clicks.png"&gt;&lt;img src="zoom-out-two-clicks.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:32:14.175" endtime="20240613 16:32:14.775"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20240613 16:32:14.776" endtime="20240613 16:32:17.857"/>
</kw>
<doc>Verify the overlap with several screen resolutions and zoom.
The following steps are executed:
- Open the NG Gallery page
- Click on the drop down box
- Verify if product type 'MSGIODC Visualised Products' exist
- Click on the product type 'MSGIODC Visualised Products'
- Verify if list box with layers exist
- Click on the layer 'Cloud Top Height - MSG - Indian Ocean'
- Verify if buttons 'zoom in' and 'zoom out' exist
- Click on the 'zoom in'
- Verify if button 'zoom in' shows globe with a zoom in
- Click on the 'zoom out'
- Verify if button 'zoom out' shows globe with a zoom out</doc>
<status status="PASS" starttime="20240613 16:31:43.965" endtime="20240613 16:32:17.857"/>
</test>
<doc>This test validates the working zoom selecting the buttons.</doc>
<status status="PASS" starttime="20240613 16:31:43.946" endtime="20240613 16:32:17.857"/>
</suite>
<suite id="s1-s1-s1-s9" name="Test-GUI-TC-030" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery\NG-GALLERY-TestCases\TestsSuites\Test-GUI-TC-030.robot">
<test id="s1-s1-s1-s9-t1" name="Test-GUI-TC-030" line="11">
<kw name="Open NG GALLERY" library="commonKeywords" type="SETUP">
<doc>Open the web browser passed as argument (default browser is chrome) and open the NG GALLERY webpage</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup ${browser}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup chrome" library="commonKeywords">
<doc>Configure the google chrome webdriver</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${options_chrome}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240613 16:32:17.892" level="INFO">${options_chrome} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000024A6FCF1240&gt;</msg>
<status status="PASS" starttime="20240613 16:32:17.892" endtime="20240613 16:32:17.892"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:32:17.892" endtime="20240613 16:32:17.892"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:32:17.892" endtime="20240613 16:32:17.892"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>enable-automation</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:32:17.892" endtime="20240613 16:32:17.892"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>disable-gpu</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:32:17.892" endtime="20240613 16:32:17.892"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>force-device-scale-factor\=0.65</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:32:17.892" endtime="20240613 16:32:17.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EXECDIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240613 16:32:17.892" level="INFO">C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery</msg>
<status status="PASS" starttime="20240613 16:32:17.892" endtime="20240613 16:32:17.892"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>driver_name=Chrome</arg>
<arg>executable_path=${EXECDIR}/Runners/chromedriver.exe</arg>
<arg>chrome_options=${options_chrome}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20240613 16:32:17.892" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20240613 16:32:17.892" endtime="20240613 16:32:19.950"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20240613 16:32:19.951" endtime="20240613 16:32:19.977"/>
</kw>
<status status="PASS" starttime="20240613 16:32:17.892" endtime="20240613 16:32:19.977"/>
</kw>
<status status="PASS" starttime="20240613 16:32:17.873" endtime="20240613 16:32:19.978"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${ng_galleryl_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20240613 16:32:19.978" level="INFO">Opening url 'http://localhost:80/'</msg>
<status status="PASS" starttime="20240613 16:32:19.978" endtime="20240613 16:32:20.689"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=ng-gallery-main-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:32:20.773" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ng-gallery-main-page.png"&gt;&lt;img src="ng-gallery-main-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:32:20.690" endtime="20240613 16:32:20.774"/>
</kw>
<status status="PASS" starttime="20240613 16:32:17.873" endtime="20240613 16:32:20.774"/>
</kw>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<arg>${SELENIUM_SPEED}</arg>
<doc>Sets the delay that is waited after each Selenium command.</doc>
<status status="PASS" starttime="20240613 16:32:20.775" endtime="20240613 16:32:20.776"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:32:20.778" level="INFO">Clicking element 'xpath://*[@class='mat-mdc-select-value']'.</msg>
<status status="PASS" starttime="20240613 16:32:20.777" endtime="20240613 16:32:21.894"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX_PRODUCT_TYPE}//*[contains(text(),' Meteosat 0 degree Imagery ')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:32:21.896" level="INFO">Clicking element 'xpath://*[@id='cdk-overlay-0']//*[contains(text(),' Meteosat 0 degree Imagery ')]'.</msg>
<status status="PASS" starttime="20240613 16:32:21.895" endtime="20240613 16:32:23.007"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${RETRY_ATTEMPTS}</arg>
<arg>${RETRY_INTERVAL}</arg>
<arg>Page Should Contain Element</arg>
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'High Rate SEVIRI IR3.9 μm Image - MSG - 0 degree')]</arg>
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'High Rate SEVIRI IR10.8 μm Image - MSG - 0 degree')]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'High Rate SEVIRI IR3.9 μm Image - MSG - 0 degree')]</arg>
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'High Rate SEVIRI IR10.8 μm Image - MSG - 0 degree')]</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20240613 16:32:23.533" level="INFO">Current page contains element 'xpath://*[@role="listbox"]//*[contains(text(),'High Rate SEVIRI IR3.9 μm Image - MSG - 0 degree')]'.</msg>
<status status="PASS" starttime="20240613 16:32:23.009" endtime="20240613 16:32:23.533"/>
</kw>
<status status="PASS" starttime="20240613 16:32:23.008" endtime="20240613 16:32:23.533"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=layers-products-type-0-degree.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:32:24.109" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="layers-products-type-0-degree.png"&gt;&lt;img src="layers-products-type-0-degree.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:32:23.533" endtime="20240613 16:32:24.109"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:32:24.109" level="INFO">Clicking element 'xpath://*[@class='mat-mdc-select-value']'.</msg>
<status status="PASS" starttime="20240613 16:32:24.109" endtime="20240613 16:32:25.198"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX_PRODUCT_TYPE}//*[contains(text(),' MSGIODC RGB Composites ')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:32:25.200" level="INFO">Clicking element 'xpath://*[@id='cdk-overlay-0']//*[contains(text(),' MSGIODC RGB Composites ')]'.</msg>
<status status="PASS" starttime="20240613 16:32:25.199" endtime="20240613 16:32:26.288"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${RETRY_ATTEMPTS}</arg>
<arg>${RETRY_INTERVAL}</arg>
<arg>Page Should Contain Element</arg>
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'Airmass RGB - MSG - Indian Ocean')]</arg>
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'Volcanic Ash RGB - MSG - Indian Ocean')]</arg>
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'Convection RGB - MSG - Indian Ocean')]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'Airmass RGB - MSG - Indian Ocean')]</arg>
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'Volcanic Ash RGB - MSG - Indian Ocean')]</arg>
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'Convection RGB - MSG - Indian Ocean')]</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20240613 16:32:26.811" level="INFO">Current page contains element 'xpath://*[@role="listbox"]//*[contains(text(),'Airmass RGB - MSG - Indian Ocean')]'.</msg>
<status status="PASS" starttime="20240613 16:32:26.288" endtime="20240613 16:32:26.811"/>
</kw>
<status status="PASS" starttime="20240613 16:32:26.288" endtime="20240613 16:32:26.811"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=layers-products-type-41-degree.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:32:27.380" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="layers-products-type-41-degree.png"&gt;&lt;img src="layers-products-type-41-degree.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:32:26.812" endtime="20240613 16:32:27.380"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20240613 16:32:27.380" endtime="20240613 16:32:31.073"/>
</kw>
<doc>Verify types of products with certain types of layers.
The following steps are executed:
- Open the NG Gallery page
- Click on the drop down box
- Click on the product type 'Meteosat 0 degree Imagery' (one of the type 0 degree)
- Verify that all layers of thet type exist
- Click on the product type 'MSGIODC RGB Composites' (one of the type 41 degree)
- Verify that all layers of thet type exist</doc>
<status status="PASS" starttime="20240613 16:32:17.873" endtime="20240613 16:32:31.073"/>
</test>
<doc>Each view should have their special list of layers.</doc>
<status status="PASS" starttime="20240613 16:32:17.857" endtime="20240613 16:32:31.076"/>
</suite>
<suite id="s1-s1-s1-s10" name="Test-GUI-TC-040" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery\NG-GALLERY-TestCases\TestsSuites\Test-GUI-TC-040.robot">
<test id="s1-s1-s1-s10-t1" name="Test-GUI-TC-040" line="11">
<kw name="Open NG GALLERY" library="commonKeywords" type="SETUP">
<doc>Open the web browser passed as argument (default browser is chrome) and open the NG GALLERY webpage</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup ${browser}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup chrome" library="commonKeywords">
<doc>Configure the google chrome webdriver</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${options_chrome}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240613 16:32:31.105" level="INFO">${options_chrome} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000024A6FD0C208&gt;</msg>
<status status="PASS" starttime="20240613 16:32:31.105" endtime="20240613 16:32:31.105"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:32:31.105" endtime="20240613 16:32:31.105"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:32:31.105" endtime="20240613 16:32:31.121"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>enable-automation</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:32:31.121" endtime="20240613 16:32:31.121"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>disable-gpu</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:32:31.121" endtime="20240613 16:32:31.121"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>force-device-scale-factor\=0.65</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:32:31.121" endtime="20240613 16:32:31.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EXECDIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240613 16:32:31.121" level="INFO">C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery</msg>
<status status="PASS" starttime="20240613 16:32:31.121" endtime="20240613 16:32:31.121"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>driver_name=Chrome</arg>
<arg>executable_path=${EXECDIR}/Runners/chromedriver.exe</arg>
<arg>chrome_options=${options_chrome}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20240613 16:32:31.121" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20240613 16:32:31.121" endtime="20240613 16:32:33.241"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20240613 16:32:33.241" endtime="20240613 16:32:33.267"/>
</kw>
<status status="PASS" starttime="20240613 16:32:31.105" endtime="20240613 16:32:33.268"/>
</kw>
<status status="PASS" starttime="20240613 16:32:31.102" endtime="20240613 16:32:33.268"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${ng_galleryl_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20240613 16:32:33.268" level="INFO">Opening url 'http://localhost:80/'</msg>
<status status="PASS" starttime="20240613 16:32:33.268" endtime="20240613 16:32:33.930"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=ng-gallery-main-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:32:34.027" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ng-gallery-main-page.png"&gt;&lt;img src="ng-gallery-main-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:32:33.931" endtime="20240613 16:32:34.027"/>
</kw>
<status status="PASS" starttime="20240613 16:32:31.102" endtime="20240613 16:32:34.028"/>
</kw>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<arg>${SELENIUM_SPEED}</arg>
<doc>Sets the delay that is waited after each Selenium command.</doc>
<status status="PASS" starttime="20240613 16:32:34.028" endtime="20240613 16:32:34.029"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:32:34.031" level="INFO">Clicking element 'xpath://*[@class='mat-mdc-select-value']'.</msg>
<status status="PASS" starttime="20240613 16:32:34.029" endtime="20240613 16:32:35.125"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX_PRODUCT_TYPE}//*[contains(text(),' MSGIODC Imagery ')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:32:35.125" level="INFO">Clicking element 'xpath://*[@id='cdk-overlay-0']//*[contains(text(),' MSGIODC Imagery ')]'.</msg>
<status status="PASS" starttime="20240613 16:32:35.125" endtime="20240613 16:32:36.230"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'High Rate SEVIRI IR3.9 \u03bcm Image - MSG - Indian Ocean')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:32:36.232" level="INFO">Clicking element 'xpath://*[@role="listbox"]//*[contains(text(),'High Rate SEVIRI IR3.9 μm Image - MSG - Indian Ocean')]'.</msg>
<status status="PASS" starttime="20240613 16:32:36.231" endtime="20240613 16:32:37.319"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240613 16:32:42.332" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240613 16:32:37.320" endtime="20240613 16:32:42.332"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=product-type-regions.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:32:42.905" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="product-type-regions.png"&gt;&lt;img src="product-type-regions.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:32:42.332" endtime="20240613 16:32:42.905"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DOWNLOAD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:32:42.906" level="INFO">Clicking element 'xpath://mat-icon'.</msg>
<status status="PASS" starttime="20240613 16:32:42.905" endtime="20240613 16:32:43.979"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${RETRY_ATTEMPTS}</arg>
<arg>${RETRY_INTERVAL}</arg>
<arg>Page Should Contain Element</arg>
<arg>${DOWNLOAD_BUTTON_LIST}//*[contains(text(),'JPEG')]</arg>
<arg>${DOWNLOAD_BUTTON_LIST}//*[contains(text(),'PNG')]</arg>
<arg>${DOWNLOAD_BUTTON_LIST}//*[contains(text(),'TIFF')]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${DOWNLOAD_BUTTON_LIST}//*[contains(text(),'JPEG')]</arg>
<arg>${DOWNLOAD_BUTTON_LIST}//*[contains(text(),'PNG')]</arg>
<arg>${DOWNLOAD_BUTTON_LIST}//*[contains(text(),'TIFF')]</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20240613 16:32:44.502" level="INFO">Current page contains element 'xpath://*[@class="mat-mdc-menu-content"]//*[contains(text(),'JPEG')]'.</msg>
<status status="PASS" starttime="20240613 16:32:43.981" endtime="20240613 16:32:44.502"/>
</kw>
<status status="PASS" starttime="20240613 16:32:43.980" endtime="20240613 16:32:44.502"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=dowload-button-list-image-type.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:32:45.060" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="dowload-button-list-image-type.png"&gt;&lt;img src="dowload-button-list-image-type.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:32:44.502" endtime="20240613 16:32:45.060"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DOWNLOAD_BUTTON_LIST}//*[contains(text(),'JPEG')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:32:45.060" level="INFO">Clicking element 'xpath://*[@class="mat-mdc-menu-content"]//*[contains(text(),'JPEG')]'.</msg>
<status status="PASS" starttime="20240613 16:32:45.060" endtime="20240613 16:32:46.132"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>20s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240613 16:33:06.141" level="INFO">Slept 20 seconds</msg>
<status status="PASS" starttime="20240613 16:32:46.133" endtime="20240613 16:33:06.141"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20240613 16:33:06.142" endtime="20240613 16:33:09.283"/>
</kw>
<doc>Verify the download button.
The following steps are executed:
- Open the NG Gallery page
- Click on the drop down box
- Click on the product type 'MSGIODC Imagery'
- Click on the layer 'High Rate SEVIRI IR3.9 μm Image - MSG - Indian Ocean'
- Click on the 'Download' button
- Verify that all types of images are exist ('jpg', 'png', 'tiff')
- Click on the 'jpg' button</doc>
<status status="PASS" starttime="20240613 16:32:31.089" endtime="20240613 16:33:09.284"/>
</test>
<doc>Shall be possible to download the currently displayed region by just clicking on a button and choose the type which we need: jpeg, png, tiff. The output image should contain a footer with the EUMETSAT logo and timestamp of the selected layer.</doc>
<status status="PASS" starttime="20240613 16:32:31.076" endtime="20240613 16:33:09.286"/>
</suite>
<suite id="s1-s1-s1-s11" name="Test-GUI-TC-050" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery\NG-GALLERY-TestCases\TestsSuites\Test-GUI-TC-050.robot">
<test id="s1-s1-s1-s11-t1" name="Test-GUI-TC-050" line="11">
<kw name="Open NG GALLERY" library="commonKeywords" type="SETUP">
<doc>Open the web browser passed as argument (default browser is chrome) and open the NG GALLERY webpage</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup ${browser}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup chrome" library="commonKeywords">
<doc>Configure the google chrome webdriver</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${options_chrome}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240613 16:33:09.333" level="INFO">${options_chrome} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000024A6FCF1940&gt;</msg>
<status status="PASS" starttime="20240613 16:33:09.332" endtime="20240613 16:33:09.333"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:33:09.333" endtime="20240613 16:33:09.334"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:33:09.334" endtime="20240613 16:33:09.334"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>enable-automation</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:33:09.335" endtime="20240613 16:33:09.335"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>disable-gpu</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:33:09.335" endtime="20240613 16:33:09.335"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>force-device-scale-factor\=0.65</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:33:09.336" endtime="20240613 16:33:09.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EXECDIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240613 16:33:09.337" level="INFO">C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery</msg>
<status status="PASS" starttime="20240613 16:33:09.336" endtime="20240613 16:33:09.337"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>driver_name=Chrome</arg>
<arg>executable_path=${EXECDIR}/Runners/chromedriver.exe</arg>
<arg>chrome_options=${options_chrome}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20240613 16:33:09.338" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20240613 16:33:09.337" endtime="20240613 16:33:11.716"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20240613 16:33:11.717" endtime="20240613 16:33:11.746"/>
</kw>
<status status="PASS" starttime="20240613 16:33:09.331" endtime="20240613 16:33:11.746"/>
</kw>
<status status="PASS" starttime="20240613 16:33:09.316" endtime="20240613 16:33:11.746"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${ng_galleryl_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20240613 16:33:11.747" level="INFO">Opening url 'http://localhost:80/'</msg>
<status status="PASS" starttime="20240613 16:33:11.746" endtime="20240613 16:33:12.626"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=ng-gallery-main-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:33:12.738" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ng-gallery-main-page.png"&gt;&lt;img src="ng-gallery-main-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:33:12.627" endtime="20240613 16:33:12.738"/>
</kw>
<status status="PASS" starttime="20240613 16:33:09.315" endtime="20240613 16:33:12.738"/>
</kw>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<arg>${SELENIUM_SPEED}</arg>
<doc>Sets the delay that is waited after each Selenium command.</doc>
<status status="PASS" starttime="20240613 16:33:12.739" endtime="20240613 16:33:12.740"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:33:12.743" level="INFO">Clicking element 'xpath://*[@class='mat-mdc-select-value']'.</msg>
<status status="PASS" starttime="20240613 16:33:12.742" endtime="20240613 16:33:13.869"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX_PRODUCT_TYPE}//*[contains(text(),' MSGIODC Visualised Products ')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:33:13.872" level="INFO">Clicking element 'xpath://*[@id='cdk-overlay-0']//*[contains(text(),' MSGIODC Visualised Products ')]'.</msg>
<status status="PASS" starttime="20240613 16:33:13.870" endtime="20240613 16:33:14.985"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240613 16:33:18.000" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20240613 16:33:14.986" endtime="20240613 16:33:18.000"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'Cloud Top Height - MSG - Indian Ocean')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:33:18.001" level="INFO">Clicking element 'xpath://*[@role="listbox"]//*[contains(text(),'Cloud Top Height - MSG - Indian Ocean')]'.</msg>
<status status="PASS" starttime="20240613 16:33:18.000" endtime="20240613 16:33:19.059"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=regions-for-41-degree-product-type.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:33:19.638" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="regions-for-41-degree-product-type.png"&gt;&lt;img src="regions-for-41-degree-product-type.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:33:19.059" endtime="20240613 16:33:19.638"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:33:19.639" level="INFO">Clicking element 'xpath://*[@class='mat-mdc-select-value']'.</msg>
<status status="PASS" starttime="20240613 16:33:19.638" endtime="20240613 16:33:20.690"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX_PRODUCT_TYPE}//*[contains(text(),' Meteosat 0 degree RGB Composites ')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:33:20.691" level="INFO">Clicking element 'xpath://*[@id='cdk-overlay-0']//*[contains(text(),' Meteosat 0 degree RGB Composites ')]'.</msg>
<status status="PASS" starttime="20240613 16:33:20.691" endtime="20240613 16:33:22.230"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240613 16:33:25.238" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20240613 16:33:22.231" endtime="20240613 16:33:25.238"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'Dust RGB - MSG - 0 degree')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:33:25.240" level="INFO">Clicking element 'xpath://*[@role="listbox"]//*[contains(text(),'Dust RGB - MSG - 0 degree')]'.</msg>
<status status="PASS" starttime="20240613 16:33:25.239" endtime="20240613 16:33:26.322"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=regions-for-0-degree-product-type.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:33:27.256" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="regions-for-0-degree-product-type.png"&gt;&lt;img src="regions-for-0-degree-product-type.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:33:26.323" endtime="20240613 16:33:27.256"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20240613 16:33:27.257" endtime="20240613 16:33:30.380"/>
</kw>
<doc>Each of type of imagery should have their group of regions.
The following steps are executed:
- Open the NG Gallery page
- Click on the drop down box
- Click on the product type 'MSGIODC Visualized Products' (one of the type 41 degree)
- Click on the layers 'Cloud Top Height – MSG – Indian Ocean'
- Verify if all regions are visualized
- Click on the product type 'Meteosat 0 degree RGB Composites' (one of the type 0 degree)
- Click on the layers 'Dust RGB – MSG – 0 degree'
- Verify if all regions are visualized</doc>
<status status="PASS" starttime="20240613 16:33:09.310" endtime="20240613 16:33:30.381"/>
</test>
<doc>For the 41.5 degree and 0 degree should be their group of regions.</doc>
<status status="PASS" starttime="20240613 16:33:09.290" endtime="20240613 16:33:30.383"/>
</suite>
<suite id="s1-s1-s1-s12" name="Test-GUI-TC-060" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery\NG-GALLERY-TestCases\TestsSuites\Test-GUI-TC-060.robot">
<test id="s1-s1-s1-s12-t1" name="Test-GUI-TC-050" line="11">
<kw name="Open NG GALLERY" library="commonKeywords" type="SETUP">
<doc>Open the web browser passed as argument (default browser is chrome) and open the NG GALLERY webpage</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup ${browser}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup chrome" library="commonKeywords">
<doc>Configure the google chrome webdriver</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${options_chrome}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240613 16:33:30.418" level="INFO">${options_chrome} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000024A6FCD8BA8&gt;</msg>
<status status="PASS" starttime="20240613 16:33:30.418" endtime="20240613 16:33:30.419"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:33:30.419" endtime="20240613 16:33:30.419"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:33:30.419" endtime="20240613 16:33:30.420"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>enable-automation</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:33:30.420" endtime="20240613 16:33:30.421"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>disable-gpu</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:33:30.421" endtime="20240613 16:33:30.421"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>force-device-scale-factor\=0.65</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:33:30.421" endtime="20240613 16:33:30.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EXECDIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240613 16:33:30.423" level="INFO">C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery</msg>
<status status="PASS" starttime="20240613 16:33:30.423" endtime="20240613 16:33:30.423"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>driver_name=Chrome</arg>
<arg>executable_path=${EXECDIR}/Runners/chromedriver.exe</arg>
<arg>chrome_options=${options_chrome}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20240613 16:33:30.424" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20240613 16:33:30.423" endtime="20240613 16:33:32.834"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20240613 16:33:32.835" endtime="20240613 16:33:32.855"/>
</kw>
<status status="PASS" starttime="20240613 16:33:30.417" endtime="20240613 16:33:32.855"/>
</kw>
<status status="PASS" starttime="20240613 16:33:30.406" endtime="20240613 16:33:32.855"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${ng_galleryl_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20240613 16:33:32.856" level="INFO">Opening url 'http://localhost:80/'</msg>
<status status="PASS" starttime="20240613 16:33:32.856" endtime="20240613 16:33:33.649"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=ng-gallery-main-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:33:33.747" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ng-gallery-main-page.png"&gt;&lt;img src="ng-gallery-main-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:33:33.649" endtime="20240613 16:33:33.747"/>
</kw>
<status status="PASS" starttime="20240613 16:33:30.405" endtime="20240613 16:33:33.747"/>
</kw>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<arg>${SELENIUM_SPEED}</arg>
<doc>Sets the delay that is waited after each Selenium command.</doc>
<status status="PASS" starttime="20240613 16:33:33.749" endtime="20240613 16:33:33.749"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:33:33.751" level="INFO">Clicking element 'xpath://*[@class='mat-mdc-select-value']'.</msg>
<status status="PASS" starttime="20240613 16:33:33.750" endtime="20240613 16:33:34.873"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX_PRODUCT_TYPE}//*[contains(text(),' MSGIODC Visualised Products ')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:33:34.873" level="INFO">Clicking element 'xpath://*[@id='cdk-overlay-0']//*[contains(text(),' MSGIODC Visualised Products ')]'.</msg>
<status status="PASS" starttime="20240613 16:33:34.873" endtime="20240613 16:33:36.000"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240613 16:33:39.006" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20240613 16:33:36.001" endtime="20240613 16:33:39.006"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'Cloud Top Height - MSG - Indian Ocean')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:33:39.008" level="INFO">Clicking element 'xpath://*[@role="listbox"]//*[contains(text(),'Cloud Top Height - MSG - Indian Ocean')]'.</msg>
<status status="PASS" starttime="20240613 16:33:39.007" endtime="20240613 16:33:40.092"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240613 16:33:50.107" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20240613 16:33:40.092" endtime="20240613 16:33:50.107"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=image-of-layer-current-time.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:33:50.684" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="image-of-layer-current-time.png"&gt;&lt;img src="image-of-layer-current-time.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:33:50.107" endtime="20240613 16:33:50.684"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TIMELINE_CURRENT_TIME_MINUS_HOUR}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:33:50.688" level="INFO">Clicking element 'xpath://*[@id="timeline"]//div[@class='events']//li[last()-4]/a'.</msg>
<status status="PASS" starttime="20240613 16:33:50.688" endtime="20240613 16:33:51.761"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>20s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240613 16:34:11.772" level="INFO">Slept 20 seconds</msg>
<status status="PASS" starttime="20240613 16:33:51.763" endtime="20240613 16:34:11.772"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=image-of-layer-current-time-minus-hour.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:34:12.335" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="image-of-layer-current-time-minus-hour.png"&gt;&lt;img src="image-of-layer-current-time-minus-hour.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:34:11.772" endtime="20240613 16:34:12.335"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20240613 16:34:12.335" endtime="20240613 16:34:15.514"/>
</kw>
<doc>Verify the timeline with the changeable layers depends on time.
The following steps are executed:
- Open the NG Gallery page
- Click on the drop down box
- Click on the product type 'MSGIODC Visualized Products'
- Click on the layers 'Cloud Top Height – MSG – Indian Ocean'
- Cupture screenshot of the layer for current time
- Click on the timeline time before 1 hour
- Cupture screenshot of the layer for that time</doc>
<status status="PASS" starttime="20240613 16:33:30.402" endtime="20240613 16:34:15.515"/>
</test>
<doc>The timeline shall keep a rolling buffer of 3 days of images history for every 15 minutes. The layers should be change with changing time. On the display should visualize the time which chosen.</doc>
<status status="PASS" starttime="20240613 16:33:30.386" endtime="20240613 16:34:15.517"/>
</suite>
<suite id="s1-s1-s1-s13" name="Test-GUI-TC-070" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery\NG-GALLERY-TestCases\TestsSuites\Test-GUI-TC-070.robot">
<test id="s1-s1-s1-s13-t1" name="Test-GUI-TC-050" line="11">
<kw name="Open NG GALLERY" library="commonKeywords" type="SETUP">
<doc>Open the web browser passed as argument (default browser is chrome) and open the NG GALLERY webpage</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup ${browser}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup chrome" library="commonKeywords">
<doc>Configure the google chrome webdriver</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${options_chrome}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240613 16:34:15.554" level="INFO">${options_chrome} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000024A6FC9DEF0&gt;</msg>
<status status="PASS" starttime="20240613 16:34:15.553" endtime="20240613 16:34:15.554"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:34:15.554" endtime="20240613 16:34:15.555"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:34:15.556" endtime="20240613 16:34:15.556"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>enable-automation</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:34:15.556" endtime="20240613 16:34:15.557"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>disable-gpu</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:34:15.557" endtime="20240613 16:34:15.557"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>force-device-scale-factor\=0.65</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:34:15.557" endtime="20240613 16:34:15.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EXECDIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240613 16:34:15.558" level="INFO">C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery</msg>
<status status="PASS" starttime="20240613 16:34:15.558" endtime="20240613 16:34:15.558"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>driver_name=Chrome</arg>
<arg>executable_path=${EXECDIR}/Runners/chromedriver.exe</arg>
<arg>chrome_options=${options_chrome}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20240613 16:34:15.559" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20240613 16:34:15.559" endtime="20240613 16:34:17.978"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20240613 16:34:17.978" endtime="20240613 16:34:18.005"/>
</kw>
<status status="PASS" starttime="20240613 16:34:15.553" endtime="20240613 16:34:18.005"/>
</kw>
<status status="PASS" starttime="20240613 16:34:15.541" endtime="20240613 16:34:18.005"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${ng_galleryl_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20240613 16:34:18.006" level="INFO">Opening url 'http://localhost:80/'</msg>
<status status="PASS" starttime="20240613 16:34:18.006" endtime="20240613 16:34:18.857"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=ng-gallery-main-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:34:18.969" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ng-gallery-main-page.png"&gt;&lt;img src="ng-gallery-main-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:34:18.858" endtime="20240613 16:34:18.969"/>
</kw>
<status status="PASS" starttime="20240613 16:34:15.540" endtime="20240613 16:34:18.969"/>
</kw>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<arg>${SELENIUM_SPEED}</arg>
<doc>Sets the delay that is waited after each Selenium command.</doc>
<status status="PASS" starttime="20240613 16:34:18.970" endtime="20240613 16:34:18.972"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:34:18.974" level="INFO">Clicking element 'xpath://*[@class='mat-mdc-select-value']'.</msg>
<status status="PASS" starttime="20240613 16:34:18.973" endtime="20240613 16:34:20.090"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX_PRODUCT_TYPE}//*[contains(text(),' Meteosat 0 degree RGB Composites ')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:34:20.093" level="INFO">Clicking element 'xpath://*[@id='cdk-overlay-0']//*[contains(text(),' Meteosat 0 degree RGB Composites ')]'.</msg>
<status status="PASS" starttime="20240613 16:34:20.091" endtime="20240613 16:34:21.223"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240613 16:34:24.228" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20240613 16:34:21.223" endtime="20240613 16:34:24.228"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'Dust RGB - MSG - 0 degree')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:34:24.228" level="INFO">Clicking element 'xpath://*[@role="listbox"]//*[contains(text(),'Dust RGB - MSG - 0 degree')]'.</msg>
<status status="PASS" starttime="20240613 16:34:24.228" endtime="20240613 16:34:25.304"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240613 16:34:28.308" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20240613 16:34:25.304" endtime="20240613 16:34:28.309"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=image-of-layer-current-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:34:32.923" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="image-of-layer-current-page.png"&gt;&lt;img src="image-of-layer-current-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:34:28.309" endtime="20240613 16:34:32.923"/>
</kw>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20240613 16:34:33.439" level="INFO">${url} = http://localhost/?titles=Meteosat+0+degree+RGB+Composites&amp;layer=msg_fes%3Argb_dust</msg>
<status status="PASS" starttime="20240613 16:34:32.924" endtime="20240613 16:34:33.439"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.open("${url}", "_blank");</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20240613 16:34:33.439" level="INFO">Executing JavaScript:
window.open("http://localhost/?titles=Meteosat+0+degree+RGB+Composites&amp;layer=msg_fes%3Argb_dust", "_blank");
Without any arguments.</msg>
<status status="PASS" starttime="20240613 16:34:33.439" endtime="20240613 16:34:33.963"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=image-of-layer-copied-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:34:34.854" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="image-of-layer-copied-page.png"&gt;&lt;img src="image-of-layer-copied-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:34:33.963" endtime="20240613 16:34:34.855"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20240613 16:34:34.855" endtime="20240613 16:34:37.989"/>
</kw>
<doc>Verify URL of the layers.
The following steps are executed:
- Open the NG Gallery page
- Click on the drop down box
- Click on the product type 'Meteosat 0 degree RGB Composites'
- Click on the layers 'Dust RGB - MSG - 0 degree'
- Copy current url
- Open new window and paste the url
- Verify that the url open the same context as the current</doc>
<status status="PASS" starttime="20240613 16:34:15.538" endtime="20240613 16:34:37.990"/>
</test>
<doc>All layers shall be addressable with a dedicated URL.</doc>
<status status="PASS" starttime="20240613 16:34:15.520" endtime="20240613 16:34:37.992"/>
</suite>
<suite id="s1-s1-s1-s14" name="Test-GUI-TC-080" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery\NG-GALLERY-TestCases\TestsSuites\Test-GUI-TC-080.robot">
<test id="s1-s1-s1-s14-t1" name="Test-GUI-TC-050" line="11">
<kw name="Open NG GALLERY" library="commonKeywords" type="SETUP">
<doc>Open the web browser passed as argument (default browser is chrome) and open the NG GALLERY webpage</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup ${browser}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup chrome" library="commonKeywords">
<doc>Configure the google chrome webdriver</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${options_chrome}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240613 16:34:38.031" level="INFO">${options_chrome} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000024A6FA9D160&gt;</msg>
<status status="PASS" starttime="20240613 16:34:38.031" endtime="20240613 16:34:38.031"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:34:38.032" endtime="20240613 16:34:38.032"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:34:38.032" endtime="20240613 16:34:38.033"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>enable-automation</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:34:38.033" endtime="20240613 16:34:38.034"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>disable-gpu</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:34:38.034" endtime="20240613 16:34:38.034"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>force-device-scale-factor\=0.65</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:34:38.035" endtime="20240613 16:34:38.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EXECDIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240613 16:34:38.036" level="INFO">C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery</msg>
<status status="PASS" starttime="20240613 16:34:38.035" endtime="20240613 16:34:38.036"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>driver_name=Chrome</arg>
<arg>executable_path=${EXECDIR}/Runners/chromedriver.exe</arg>
<arg>chrome_options=${options_chrome}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20240613 16:34:38.037" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20240613 16:34:38.036" endtime="20240613 16:34:40.372"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20240613 16:34:40.373" endtime="20240613 16:34:40.403"/>
</kw>
<status status="PASS" starttime="20240613 16:34:38.030" endtime="20240613 16:34:40.403"/>
</kw>
<status status="PASS" starttime="20240613 16:34:38.018" endtime="20240613 16:34:40.403"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${ng_galleryl_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20240613 16:34:40.404" level="INFO">Opening url 'http://localhost:80/'</msg>
<status status="PASS" starttime="20240613 16:34:40.403" endtime="20240613 16:34:41.186"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=ng-gallery-main-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:34:41.289" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ng-gallery-main-page.png"&gt;&lt;img src="ng-gallery-main-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:34:41.187" endtime="20240613 16:34:41.289"/>
</kw>
<status status="PASS" starttime="20240613 16:34:38.017" endtime="20240613 16:34:41.290"/>
</kw>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<arg>${SELENIUM_SPEED}</arg>
<doc>Sets the delay that is waited after each Selenium command.</doc>
<status status="PASS" starttime="20240613 16:34:41.291" endtime="20240613 16:34:41.291"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:34:41.293" level="INFO">Clicking element 'xpath://*[@class='mat-mdc-select-value']'.</msg>
<status status="PASS" starttime="20240613 16:34:41.292" endtime="20240613 16:34:42.407"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX_PRODUCT_TYPE}//*[contains(text(),' Meteosat 0 degree RGB Composites ')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:34:42.410" level="INFO">Clicking element 'xpath://*[@id='cdk-overlay-0']//*[contains(text(),' Meteosat 0 degree RGB Composites ')]'.</msg>
<status status="PASS" starttime="20240613 16:34:42.408" endtime="20240613 16:34:43.534"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240613 16:34:46.548" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20240613 16:34:43.535" endtime="20240613 16:34:46.548"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'Dust RGB - MSG - 0 degree')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:34:46.549" level="INFO">Clicking element 'xpath://*[@role="listbox"]//*[contains(text(),'Dust RGB - MSG - 0 degree')]'.</msg>
<status status="PASS" starttime="20240613 16:34:46.549" endtime="20240613 16:34:47.615"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:34:47.616" level="FAIL">Keyword 'SeleniumLibrary.Click Element' expected 1 to 3 arguments, got 0.</msg>
<status status="FAIL" starttime="20240613 16:34:47.615" endtime="20240613 16:34:47.616"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240613 16:34:47.616" endtime="20240613 16:34:47.616"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=image-of-current-region.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="NOT RUN" starttime="20240613 16:34:47.617" endtime="20240613 16:34:47.617"/>
</kw>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<status status="NOT RUN" starttime="20240613 16:34:47.617" endtime="20240613 16:34:47.617"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.open("${url}", "_blank");</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<status status="NOT RUN" starttime="20240613 16:34:47.618" endtime="20240613 16:34:47.618"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=image-of-copied-region.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="NOT RUN" starttime="20240613 16:34:47.618" endtime="20240613 16:34:47.618"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20240613 16:34:47.619" endtime="20240613 16:34:50.762"/>
</kw>
<doc>Verify URL of the regions.
The following steps are executed:
- Open the NG Gallery page
- Click on the drop down box
- Click on the product type 'Meteosat 0 degree RGB Composites'
- Click on the layers 'Dust RGB - MSG - 0 degree'
- Click on the region of 'America'
- Copy current url
- Open new window and paste the url
- Verify that the url open the same context as the current</doc>
<status status="FAIL" starttime="20240613 16:34:38.014" endtime="20240613 16:34:50.763">Keyword 'SeleniumLibrary.Click Element' expected 1 to 3 arguments, got 0.</status>
</test>
<doc>All regions shall be clickable and addressable with a dedicated URL.</doc>
<status status="FAIL" starttime="20240613 16:34:37.995" endtime="20240613 16:34:50.765"/>
</suite>
<suite id="s1-s1-s1-s15" name="Test-GUI-TC-090" source="C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery\NG-GALLERY-TestCases\TestsSuites\Test-GUI-TC-090.robot">
<test id="s1-s1-s1-s15-t1" name="Test-GUI-TC-050" line="11">
<kw name="Open NG GALLERY" library="commonKeywords" type="SETUP">
<doc>Open the web browser passed as argument (default browser is chrome) and open the NG GALLERY webpage</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup ${browser}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup chrome" library="commonKeywords">
<doc>Configure the google chrome webdriver</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${options_chrome}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240613 16:34:50.797" level="INFO">${options_chrome} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000024A6FC817B8&gt;</msg>
<status status="PASS" starttime="20240613 16:34:50.797" endtime="20240613 16:34:50.797"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:34:50.797" endtime="20240613 16:34:50.797"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:34:50.797" endtime="20240613 16:34:50.799"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>enable-automation</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:34:50.799" endtime="20240613 16:34:50.799"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>disable-gpu</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:34:50.800" endtime="20240613 16:34:50.800"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${options_chrome}</arg>
<arg>add_argument</arg>
<arg>force-device-scale-factor\=0.65</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240613 16:34:50.800" endtime="20240613 16:34:50.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EXECDIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240613 16:34:50.801" level="INFO">C:\Users\ysavchenko\Documents\Projects\EMSDATES\DVUM\test-robot-image-gallery</msg>
<status status="PASS" starttime="20240613 16:34:50.801" endtime="20240613 16:34:50.801"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>driver_name=Chrome</arg>
<arg>executable_path=${EXECDIR}/Runners/chromedriver.exe</arg>
<arg>chrome_options=${options_chrome}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20240613 16:34:50.802" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20240613 16:34:50.801" endtime="20240613 16:34:53.175"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20240613 16:34:53.175" endtime="20240613 16:34:53.206"/>
</kw>
<status status="PASS" starttime="20240613 16:34:50.796" endtime="20240613 16:34:53.206"/>
</kw>
<status status="PASS" starttime="20240613 16:34:50.785" endtime="20240613 16:34:53.206"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${ng_galleryl_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20240613 16:34:53.207" level="INFO">Opening url 'http://localhost:80/'</msg>
<status status="PASS" starttime="20240613 16:34:53.206" endtime="20240613 16:34:54.050"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=ng-gallery-main-page.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:34:54.152" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ng-gallery-main-page.png"&gt;&lt;img src="ng-gallery-main-page.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:34:54.051" endtime="20240613 16:34:54.152"/>
</kw>
<status status="PASS" starttime="20240613 16:34:50.784" endtime="20240613 16:34:54.152"/>
</kw>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<arg>${SELENIUM_SPEED}</arg>
<doc>Sets the delay that is waited after each Selenium command.</doc>
<status status="PASS" starttime="20240613 16:34:54.153" endtime="20240613 16:34:54.154"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:34:54.156" level="INFO">Clicking element 'xpath://*[@class='mat-mdc-select-value']'.</msg>
<status status="PASS" starttime="20240613 16:34:54.155" endtime="20240613 16:34:55.271"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DROP_DOWN_BOX_PRODUCT_TYPE}//*[contains(text(),' Meteosat 0 degree RGB Composites ')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:34:55.271" level="INFO">Clicking element 'xpath://*[@id='cdk-overlay-0']//*[contains(text(),' Meteosat 0 degree RGB Composites ')]'.</msg>
<status status="PASS" starttime="20240613 16:34:55.271" endtime="20240613 16:34:56.384"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240613 16:34:59.391" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20240613 16:34:56.385" endtime="20240613 16:34:59.391"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LIST_BOX_LAYERS}//*[contains(text(),'Dust RGB - MSG - 0 degree')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:34:59.391" level="INFO">Clicking element 'xpath://*[@role="listbox"]//*[contains(text(),'Dust RGB - MSG - 0 degree')]'.</msg>
<status status="PASS" starttime="20240613 16:34:59.391" endtime="20240613 16:35:00.453"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TIMELINE_CURRENT_TIME_MINUS_HOUR}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240613 16:35:00.454" level="INFO">Clicking element 'xpath://*[@id="timeline"]//div[@class='events']//li[last()-4]/a'.</msg>
<status status="PASS" starttime="20240613 16:35:00.453" endtime="20240613 16:35:02.094"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>20s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240613 16:35:22.108" level="INFO">Slept 20 seconds</msg>
<status status="PASS" starttime="20240613 16:35:02.095" endtime="20240613 16:35:22.108"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=image-of-current-layer-for-specific-time.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:35:22.670" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="image-of-current-layer-for-specific-time.png"&gt;&lt;img src="image-of-current-layer-for-specific-time.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:35:22.108" endtime="20240613 16:35:22.670"/>
</kw>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20240613 16:35:23.175" level="INFO">${url} = http://localhost/?titles=Meteosat+0+degree+RGB+Composites&amp;layer=msg_fes%3Argb_dust</msg>
<status status="PASS" starttime="20240613 16:35:22.670" endtime="20240613 16:35:23.175"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.open("${url}", "_blank");</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20240613 16:35:23.175" level="INFO">Executing JavaScript:
window.open("http://localhost/?titles=Meteosat+0+degree+RGB+Composites&amp;layer=msg_fes%3Argb_dust", "_blank");
Without any arguments.</msg>
<status status="PASS" starttime="20240613 16:35:23.175" endtime="20240613 16:35:23.695"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>filename=image-of-copied-layer-for-specific-time.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240613 16:35:25.040" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="image-of-copied-layer-for-specific-time.png"&gt;&lt;img src="image-of-copied-layer-for-specific-time.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240613 16:35:23.696" endtime="20240613 16:35:25.041"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20240613 16:35:25.042" endtime="20240613 16:35:28.190"/>
</kw>
<doc>Verify if the selected time is present in the URL.
The following steps are executed:
- Open the NG Gallery page
- Click on the drop down box
- Click on the product type 'Meteosat 0 degree RGB Composites'
- Click on the layers 'Dust RGB - MSG - 0 degree'
- Click on the timeline time before 1 hour
- Copy current url
- Open new window and paste the url
- Verify that the url open the same context as the current</doc>
<status status="PASS" starttime="20240613 16:34:50.782" endtime="20240613 16:35:28.191"/>
</test>
<doc>The selected time shall be addressable in URL.</doc>
<status status="PASS" starttime="20240613 16:34:50.767" endtime="20240613 16:35:28.193"/>
</suite>
<status status="FAIL" starttime="20240613 16:30:50.729" endtime="20240613 16:35:28.197"/>
</suite>
<status status="FAIL" starttime="20240613 16:30:50.729" endtime="20240613 16:35:28.202"/>
</suite>
<status status="FAIL" starttime="20240613 16:30:50.687" endtime="20240613 16:35:28.207"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="1" skip="0" id="s1" name="Test-Robot-Image-Gallery">Test-Robot-Image-Gallery</stat>
<stat pass="14" fail="1" skip="0" id="s1-s1" name="NG-GALLERY-TestCases">Test-Robot-Image-Gallery.NG-GALLERY-TestCases</stat>
<stat pass="14" fail="1" skip="0" id="s1-s1-s1" name="TestsSuites">Test-Robot-Image-Gallery.NG-GALLERY-TestCases.TestsSuites</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s1" name="Test-API-TC-010">Test-Robot-Image-Gallery.NG-GALLERY-TestCases.TestsSuites.Test-API-TC-010</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s2" name="Test-API-TC-020">Test-Robot-Image-Gallery.NG-GALLERY-TestCases.TestsSuites.Test-API-TC-020</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s3" name="Test-API-TC-030">Test-Robot-Image-Gallery.NG-GALLERY-TestCases.TestsSuites.Test-API-TC-030</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s4" name="Test-API-TC-040">Test-Robot-Image-Gallery.NG-GALLERY-TestCases.TestsSuites.Test-API-TC-040</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s5" name="Test-API-TC-050">Test-Robot-Image-Gallery.NG-GALLERY-TestCases.TestsSuites.Test-API-TC-050</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s6" name="Test-API-TC-060">Test-Robot-Image-Gallery.NG-GALLERY-TestCases.TestsSuites.Test-API-TC-060</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s7" name="Test-GUI-TC-010">Test-Robot-Image-Gallery.NG-GALLERY-TestCases.TestsSuites.Test-GUI-TC-010</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s8" name="Test-GUI-TC-020">Test-Robot-Image-Gallery.NG-GALLERY-TestCases.TestsSuites.Test-GUI-TC-020</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s9" name="Test-GUI-TC-030">Test-Robot-Image-Gallery.NG-GALLERY-TestCases.TestsSuites.Test-GUI-TC-030</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s10" name="Test-GUI-TC-040">Test-Robot-Image-Gallery.NG-GALLERY-TestCases.TestsSuites.Test-GUI-TC-040</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s11" name="Test-GUI-TC-050">Test-Robot-Image-Gallery.NG-GALLERY-TestCases.TestsSuites.Test-GUI-TC-050</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s12" name="Test-GUI-TC-060">Test-Robot-Image-Gallery.NG-GALLERY-TestCases.TestsSuites.Test-GUI-TC-060</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s13" name="Test-GUI-TC-070">Test-Robot-Image-Gallery.NG-GALLERY-TestCases.TestsSuites.Test-GUI-TC-070</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s1-s14" name="Test-GUI-TC-080">Test-Robot-Image-Gallery.NG-GALLERY-TestCases.TestsSuites.Test-GUI-TC-080</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s15" name="Test-GUI-TC-090">Test-Robot-Image-Gallery.NG-GALLERY-TestCases.TestsSuites.Test-GUI-TC-090</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
